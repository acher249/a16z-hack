{
    "version": 3,
    "checkpoint": {
        "stack": "organization/notes/dev",
        "latest": {
            "manifest": {
                "time": "2024-11-09T00:16:58.402923-05:00",
                "magic": "3b1911ae6e2d8d1f468975cdca7c3c6a48585f5e805330548231ecc6cfbc84ff",
                "version": "v3.136.1"
            },
            "secrets_providers": {
                "type": "passphrase",
                "state": {
                    "salt": "v1:XXTHVw82PvQ=:v1:y2hS4Qv6KEnzfRte:xTmkZY9wrSdgWtBhM3uk6vUfW2LENw=="
                }
            },
            "resources": [
                {
                    "urn": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "custom": false,
                    "type": "pulumi:pulumi:Stack",
                    "outputs": {
                        "IdentityPool": "us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                        "Region": "us-east-1",
                        "UserPool": "us-east-1_GDeAq7b4Q",
                        "UserPoolClient": "2lvkh6d4augvn3ssa0ur4v66a2"
                    },
                    "created": "2024-11-09T04:42:15.064039Z",
                    "modified": "2024-11-09T04:42:15.064039Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/runtime/stack.ts#38,23"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite::Frontend",
                    "custom": false,
                    "type": "sst:aws:StaticSite",
                    "outputs": {
                        "_dev": {
                            "autostart": true,
                            "command": "npm run dev",
                            "directory": "packages/frontend",
                            "environment": {
                                "VITE_API_URL": "https://lnta43z1q2.execute-api.us-east-1.amazonaws.com",
                                "VITE_BUCKET": "notes-dev-uploads-bftmfzsw",
                                "VITE_IDENTITY_POOL_ID": "us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                                "VITE_REGION": "us-east-1",
                                "VITE_USER_POOL_CLIENT_ID": "2lvkh6d4augvn3ssa0ur4v66a2",
                                "VITE_USER_POOL_ID": "us-east-1_GDeAq7b4Q"
                            },
                            "url": "http://url-unavailable-in-dev.mode"
                        },
                        "_hint": "https://d1ulctjzuluh0n.cloudfront.net",
                        "_metadata": {
                            "environment": {
                                "VITE_API_URL": "https://lnta43z1q2.execute-api.us-east-1.amazonaws.com",
                                "VITE_BUCKET": "notes-dev-uploads-bftmfzsw",
                                "VITE_IDENTITY_POOL_ID": "us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                                "VITE_REGION": "us-east-1",
                                "VITE_USER_POOL_CLIENT_ID": "2lvkh6d4augvn3ssa0ur4v66a2",
                                "VITE_USER_POOL_ID": "us-east-1_GDeAq7b4Q"
                            },
                            "mode": "deployed",
                            "path": "packages/frontend",
                            "url": "https://d1ulctjzuluh0n.cloudfront.net"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.171827Z",
                    "modified": "2024-11-09T04:42:51.171827Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/static-site.ts#622,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:CognitoUserPool::UserPool",
                    "custom": false,
                    "type": "sst:aws:CognitoUserPool",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.15095Z",
                    "modified": "2024-11-09T04:42:51.15095Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/cognito-user-pool.ts#430,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool::IdentityPool",
                    "custom": false,
                    "type": "sst:aws:CognitoIdentityPool",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.143093Z",
                    "modified": "2024-11-09T04:42:51.143093Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/cognito-identity-pool.ts#146,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:Dynamo::Notes",
                    "custom": false,
                    "type": "sst:aws:Dynamo",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:15.842861Z",
                    "modified": "2024-11-09T04:42:15.842861Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/dynamo.ts#423,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBdfecw",
                    "custom": false,
                    "type": "sst:aws:ApiGatewayV2LambdaRoute",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.162552Z",
                    "modified": "2024-11-09T04:42:51.162552Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#51,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:sst:Secret::StripeSecretKey",
                    "custom": false,
                    "type": "sst:sst:Secret",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:15.841306Z",
                    "modified": "2024-11-09T04:42:15.841306Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/secret.ts#108,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteCmxats",
                    "custom": false,
                    "type": "sst:aws:ApiGatewayV2LambdaRoute",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.173377Z",
                    "modified": "2024-11-09T04:42:51.173377Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#51,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:CognitoUserPoolClient::UserPoolClient",
                    "custom": false,
                    "type": "sst:aws:CognitoUserPoolClient",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.144473Z",
                    "modified": "2024-11-09T04:42:51.144473Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/cognito-user-pool-client.ts#29,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBbovhw",
                    "custom": false,
                    "type": "sst:aws:ApiGatewayV2LambdaRoute",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.175397Z",
                    "modified": "2024-11-09T04:42:51.175397Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#51,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteOrcroe",
                    "custom": false,
                    "type": "sst:aws:ApiGatewayV2LambdaRoute",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.15928Z",
                    "modified": "2024-11-09T04:42:51.15928Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#51,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:sst:LinkRef::ApiLinkRef",
                    "custom": false,
                    "type": "sst:sst:LinkRef",
                    "outputs": {
                        "properties": {
                            "type": "sst.aws.ApiGatewayV2",
                            "url": "https://lnta43z1q2.execute-api.us-east-1.amazonaws.com"
                        },
                        "target": "Api"
                    },
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.156507Z",
                    "modified": "2024-11-09T04:42:51.156507Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/link.ts#25,7"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:sst:LinkRef::StripeSecretKeyLinkRef",
                    "custom": false,
                    "type": "sst:sst:LinkRef",
                    "outputs": {
                        "properties": {
                            "type": "sst.sst.Secret",
                            "value": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:IsgTyPo6EvuFqi9L:srWExMQw9zW1ZnxIY7X+IzDTPS6Jew=="
                            }
                        },
                        "target": "StripeSecretKey"
                    },
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:15.845067Z",
                    "modified": "2024-11-09T04:42:15.845067Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/link.ts#25,7"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteWhzhka",
                    "custom": false,
                    "type": "sst:aws:ApiGatewayV2LambdaRoute",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.152712Z",
                    "modified": "2024-11-09T04:42:51.152712Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#51,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:Bucket::Uploads",
                    "custom": false,
                    "type": "sst:aws:Bucket",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:15.843786Z",
                    "modified": "2024-11-09T04:42:15.843786Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/bucket.ts#351,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:sst:LinkRef::FrontendLinkRef",
                    "custom": false,
                    "type": "sst:sst:LinkRef",
                    "outputs": {
                        "properties": {
                            "type": "sst.aws.StaticSite",
                            "url": "https://d1ulctjzuluh0n.cloudfront.net"
                        },
                        "target": "Frontend"
                    },
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.167322Z",
                    "modified": "2024-11-09T04:42:51.167322Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/link.ts#25,7"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:sst:LinkRef::IdentityPoolLinkRef",
                    "custom": false,
                    "type": "sst:sst:LinkRef",
                    "outputs": {
                        "include": [
                            {
                                "actions": [
                                    "cognito-identity:*"
                                ],
                                "resources": [
                                    "arn:aws:cognito-identity:us-east-1:727646493992:identitypool/us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec"
                                ],
                                "type": "aws.permission"
                            }
                        ],
                        "properties": {
                            "id": "us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                            "type": "sst.aws.CognitoIdentityPool"
                        },
                        "target": "IdentityPool"
                    },
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.147345Z",
                    "modified": "2024-11-09T04:42:51.147345Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/link.ts#25,7"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:sst:LinkRef::NotesLinkRef",
                    "custom": false,
                    "type": "sst:sst:LinkRef",
                    "outputs": {
                        "include": [
                            {
                                "actions": [
                                    "dynamodb:*"
                                ],
                                "resources": [
                                    "arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable",
                                    "arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*"
                                ],
                                "type": "aws.permission"
                            }
                        ],
                        "properties": {
                            "name": "notes-dev-NotesTable",
                            "type": "sst.aws.Dynamo"
                        },
                        "target": "Notes"
                    },
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:15.842055Z",
                    "modified": "2024-11-09T04:42:15.842055Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/link.ts#25,7"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:sst:LinkRef::UploadsLinkRef",
                    "custom": false,
                    "type": "sst:sst:LinkRef",
                    "outputs": {
                        "include": [
                            {
                                "actions": [
                                    "s3:*"
                                ],
                                "resources": [
                                    "arn:aws:s3:::notes-dev-uploads-bftmfzsw",
                                    "arn:aws:s3:::notes-dev-uploads-bftmfzsw/*"
                                ],
                                "type": "aws.permission"
                            }
                        ],
                        "properties": {
                            "name": "notes-dev-uploads-bftmfzsw",
                            "type": "sst.aws.Bucket"
                        },
                        "target": "Uploads"
                    },
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:15.840661Z",
                    "modified": "2024-11-09T04:42:15.840661Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/link.ts#25,7"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:sst:LinkRef::UserPoolLinkRef",
                    "custom": false,
                    "type": "sst:sst:LinkRef",
                    "outputs": {
                        "include": [
                            {
                                "actions": [
                                    "cognito-idp:*"
                                ],
                                "resources": [
                                    "arn:aws:cognito-idp:us-east-1:727646493992:userpool/us-east-1_GDeAq7b4Q"
                                ],
                                "type": "aws.permission"
                            }
                        ],
                        "properties": {
                            "id": "us-east-1_GDeAq7b4Q",
                            "type": "sst.aws.CognitoUserPool"
                        },
                        "target": "UserPool"
                    },
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.15465Z",
                    "modified": "2024-11-09T04:42:51.15465Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/link.ts#25,7"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBbbmxa",
                    "custom": false,
                    "type": "sst:aws:ApiGatewayV2LambdaRoute",
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.165101Z",
                    "modified": "2024-11-09T04:42:51.165101Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#51,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2::Api",
                    "custom": false,
                    "type": "sst:aws:ApiGatewayV2",
                    "outputs": {
                        "_hint": "https://lnta43z1q2.execute-api.us-east-1.amazonaws.com"
                    },
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.169898Z",
                    "modified": "2024-11-09T04:42:51.169898Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2.ts#683,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:sst:LinkRef::UserPoolClientLinkRef",
                    "custom": false,
                    "type": "sst:sst:LinkRef",
                    "outputs": {
                        "properties": {
                            "id": "2lvkh6d4augvn3ssa0ur4v66a2",
                            "secret": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:iNjd7PDJ00QVnn+6:gsBNo463NjsWoKXHUAQmsfBq"
                            },
                            "type": "sst.aws.CognitoUserPoolClient"
                        },
                        "target": "UserPoolClient"
                    },
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "created": "2024-11-09T04:42:51.149104Z",
                    "modified": "2024-11-09T04:42:51.149104Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/link.ts#25,7"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBdfecwHandler",
                    "custom": false,
                    "type": "sst:aws:Function",
                    "outputs": {
                        "_metadata": {
                            "dev": false,
                            "handler": "packages/functions/src/billing.main"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBdfecw",
                    "created": "2024-11-09T04:42:52.01431Z",
                    "modified": "2024-11-09T04:42:52.01431Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1238,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::pulumi:providers:random::default_4_16_7",
                    "custom": true,
                    "id": "c3f305d7-da99-4f4b-b7b4-b96da2872d9f",
                    "type": "pulumi:providers:random",
                    "inputs": {
                        "__internal": {},
                        "version": "4.16.7"
                    },
                    "outputs": {
                        "version": "4.16.7"
                    },
                    "created": "2024-11-09T04:42:16.729267Z",
                    "modified": "2024-11-09T04:42:16.729267Z"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket::FrontendAssets",
                    "custom": false,
                    "type": "sst:aws:Bucket",
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite::Frontend",
                    "created": "2024-11-09T05:08:40.674554Z",
                    "modified": "2024-11-09T05:08:40.674554Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/bucket.ts#351,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteOrcroeHandler",
                    "custom": false,
                    "type": "sst:aws:Function",
                    "outputs": {
                        "_metadata": {
                            "dev": false,
                            "handler": "packages/functions/src/create.main"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteOrcroe",
                    "created": "2024-11-09T04:42:52.009302Z",
                    "modified": "2024-11-09T04:42:52.009302Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1238,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBbovhwHandler",
                    "custom": false,
                    "type": "sst:aws:Function",
                    "outputs": {
                        "_metadata": {
                            "dev": false,
                            "handler": "packages/functions/src/list.main"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBbovhw",
                    "created": "2024-11-09T04:42:52.010935Z",
                    "modified": "2024-11-09T04:42:52.010935Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1238,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteCmxatsHandler",
                    "custom": false,
                    "type": "sst:aws:Function",
                    "outputs": {
                        "_metadata": {
                            "dev": false,
                            "handler": "packages/functions/src/delete.main"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteCmxats",
                    "created": "2024-11-09T04:42:52.01578Z",
                    "modified": "2024-11-09T04:42:52.01578Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1238,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteWhzhkaHandler",
                    "custom": false,
                    "type": "sst:aws:Function",
                    "outputs": {
                        "_metadata": {
                            "dev": false,
                            "handler": "packages/functions/src/update.main"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteWhzhka",
                    "created": "2024-11-09T04:42:52.000946Z",
                    "modified": "2024-11-09T04:42:52.000946Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1238,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBbbmxaHandler",
                    "custom": false,
                    "type": "sst:aws:Function",
                    "outputs": {
                        "_metadata": {
                            "dev": false,
                            "handler": "packages/functions/src/get.main"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBbbmxa",
                    "created": "2024-11-09T04:42:52.012851Z",
                    "modified": "2024-11-09T04:42:52.012851Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1238,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0",
                    "custom": true,
                    "id": "c6a8b897-022d-434a-8503-f32c74d61d71",
                    "type": "pulumi:providers:aws",
                    "inputs": {
                        "__internal": {},
                        "defaultTags": "{\"tags\":{\"sst:app\":\"notes\",\"sst:stage\":\"dev\"}}",
                        "region": "us-east-1",
                        "skipCredentialsValidation": "false",
                        "skipRegionValidation": "true",
                        "version": "6.58.0"
                    },
                    "outputs": {
                        "defaultTags": "{\"tags\":{\"sst:app\":\"notes\",\"sst:stage\":\"dev\"}}",
                        "region": "us-east-1",
                        "skipCredentialsValidation": "false",
                        "skipRegionValidation": "true",
                        "version": "6.58.0"
                    },
                    "created": "2024-11-09T04:42:16.693651Z",
                    "modified": "2024-11-09T04:42:16.693651Z"
                },
                {
                    "urn": "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                    "custom": true,
                    "id": "Dv8NevDDkMj8V8XBIbu86yIEIPzQVegMaxcjI4XnzE4=",
                    "type": "random:index/randomBytes:RandomBytes",
                    "inputs": {
                        "length": 32
                    },
                    "outputs": {
                        "base64": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:ireZods7tyfF82pL:Jm0WHd1s9Mav/RCJUWWDJdmxGaNeuRV6bJ7JiINuypnEv/RBGnrjKu2PGpSRnw4dkD8YXfOq/u9X9j3XrAU="
                        },
                        "hex": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:d7zU5Kz94XAEqYuJ:rDOhB9t8TGdofOoY/6HKnyKII859UppRQUJE/PGZ7+OujvGE1EiFmnLGrNlPA3rWXuJ0fIPyvK6kv/MTNRMThx9cP1l4BMbRD2RVcw/3F4C7MQ=="
                        },
                        "length": 32
                    },
                    "parent": "urn:pulumi:dev::notes::pulumi:pulumi:Stack::notes-dev",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:random::default_4_16_7::c3f305d7-da99-4f4b-b7b4-b96da2872d9f",
                    "propertyDependencies": {
                        "length": []
                    },
                    "additionalSecretOutputs": [
                        "base64",
                        "hex"
                    ],
                    "created": "2024-11-09T04:42:52.077827Z",
                    "modified": "2024-11-09T04:42:52.077827Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/util/lazy.ts#8,16"
                },
                {
                    "urn": "urn:pulumi:dev::notes::pulumi:providers:pulumi-nodejs::default",
                    "custom": true,
                    "id": "e4b0a7d6-6fc3-4af8-80ad-4532ca6f6e5a",
                    "type": "pulumi:providers:pulumi-nodejs",
                    "created": "2024-11-09T05:08:41.130851Z",
                    "modified": "2024-11-09T05:08:41.130851Z"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$aws:cloudfront/function:Function::FrontendFunction",
                    "custom": true,
                    "id": "notes-dev-FrontendFunction",
                    "type": "aws:cloudfront/function:Function",
                    "inputs": {
                        "__defaults": [
                            "publish"
                        ],
                        "code": "\nasync function handler(event) {\n  if (event.request.uri.endsWith('/')) {\n    event.request.uri += 'index.html';\n  } else if (!event.request.uri.includes('.')) {\n    event.request.uri += '.html';\n  }\n  \n  return event.request;\n}",
                        "keyValueStoreAssociations": [],
                        "name": "notes-dev-FrontendFunction",
                        "publish": true,
                        "runtime": "cloudfront-js-2.0"
                    },
                    "outputs": {
                        "arn": "arn:aws:cloudfront::727646493992:function/notes-dev-FrontendFunction",
                        "code": "\nasync function handler(event) {\n  if (event.request.uri.endsWith('/')) {\n    event.request.uri += 'index.html';\n  } else if (!event.request.uri.includes('.')) {\n    event.request.uri += '.html';\n  }\n  \n  return event.request;\n}",
                        "comment": "",
                        "etag": "ETVPDKIKX0DER",
                        "id": "notes-dev-FrontendFunction",
                        "keyValueStoreAssociations": null,
                        "liveStageEtag": "ETVPDKIKX0DER",
                        "name": "notes-dev-FrontendFunction",
                        "publish": true,
                        "runtime": "cloudfront-js-2.0",
                        "status": "UNASSOCIATED"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite::Frontend",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "code": [],
                        "keyValueStoreAssociations": [],
                        "name": [],
                        "runtime": []
                    },
                    "created": "2024-11-09T05:08:43.281188Z",
                    "modified": "2024-11-09T05:08:43.281188Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/cloudfront/function.ts#138,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:CognitoUserPool$aws:cognito/userPool:UserPool::UserPoolUserPool",
                    "custom": true,
                    "id": "us-east-1_GDeAq7b4Q",
                    "type": "aws:cognito/userPool:UserPool",
                    "inputs": {
                        "__defaults": [
                            "deletionProtection",
                            "mfaConfiguration"
                        ],
                        "accountRecoverySetting": {
                            "__defaults": [],
                            "recoveryMechanisms": [
                                {
                                    "__defaults": [],
                                    "name": "verified_phone_number",
                                    "priority": 1
                                },
                                {
                                    "__defaults": [],
                                    "name": "verified_email",
                                    "priority": 2
                                }
                            ]
                        },
                        "adminCreateUserConfig": {
                            "__defaults": [],
                            "allowAdminCreateUserOnly": false
                        },
                        "autoVerifiedAttributes": [
                            "email"
                        ],
                        "deletionProtection": "INACTIVE",
                        "emailConfiguration": {
                            "__defaults": [],
                            "emailSendingAccount": "COGNITO_DEFAULT"
                        },
                        "mfaConfiguration": "OFF",
                        "name": "notes-dev-UserPoolUserPool",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "userPoolAddOns": {
                            "__defaults": [],
                            "advancedSecurityMode": "OFF"
                        },
                        "usernameAttributes": [
                            "email"
                        ],
                        "usernameConfiguration": {
                            "__defaults": [],
                            "caseSensitive": false
                        },
                        "verificationMessageTemplate": {
                            "__defaults": [],
                            "defaultEmailOption": "CONFIRM_WITH_CODE",
                            "emailMessage": "The verification code to your new account is {####}",
                            "emailSubject": "Verify your new account",
                            "smsMessage": "The verification code to your new account is {####}"
                        }
                    },
                    "outputs": {
                        "accountRecoverySetting": {
                            "recoveryMechanisms": [
                                {
                                    "name": "verified_email",
                                    "priority": 2
                                },
                                {
                                    "name": "verified_phone_number",
                                    "priority": 1
                                }
                            ]
                        },
                        "adminCreateUserConfig": {
                            "allowAdminCreateUserOnly": false,
                            "inviteMessageTemplate": null
                        },
                        "aliasAttributes": null,
                        "arn": "arn:aws:cognito-idp:us-east-1:727646493992:userpool/us-east-1_GDeAq7b4Q",
                        "autoVerifiedAttributes": [
                            "email"
                        ],
                        "creationDate": "2024-11-09T04:42:52Z",
                        "customDomain": "",
                        "deletionProtection": "INACTIVE",
                        "deviceConfiguration": null,
                        "domain": "",
                        "emailConfiguration": {
                            "configurationSet": "",
                            "emailSendingAccount": "COGNITO_DEFAULT",
                            "fromEmailAddress": "",
                            "replyToEmailAddress": "",
                            "sourceArn": ""
                        },
                        "emailVerificationMessage": "The verification code to your new account is {####}",
                        "emailVerificationSubject": "Verify your new account",
                        "endpoint": "cognito-idp.us-east-1.amazonaws.com/us-east-1_GDeAq7b4Q",
                        "estimatedNumberOfUsers": 0,
                        "id": "us-east-1_GDeAq7b4Q",
                        "lambdaConfig": null,
                        "lastModifiedDate": "2024-11-09T04:42:52Z",
                        "mfaConfiguration": "OFF",
                        "name": "notes-dev-UserPoolUserPool",
                        "passwordPolicy": {
                            "minimumLength": 8,
                            "passwordHistorySize": 0,
                            "requireLowercase": true,
                            "requireNumbers": true,
                            "requireSymbols": true,
                            "requireUppercase": true,
                            "temporaryPasswordValidityDays": 7
                        },
                        "schemas": [],
                        "smsAuthenticationMessage": "",
                        "smsConfiguration": null,
                        "smsVerificationMessage": "The verification code to your new account is {####}",
                        "softwareTokenMfaConfiguration": null,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "userAttributeUpdateSettings": null,
                        "userPoolAddOns": {
                            "advancedSecurityMode": "OFF"
                        },
                        "usernameAttributes": [
                            "email"
                        ],
                        "usernameConfiguration": {
                            "caseSensitive": false
                        },
                        "verificationMessageTemplate": {
                            "defaultEmailOption": "CONFIRM_WITH_CODE",
                            "emailMessage": "The verification code to your new account is {####}",
                            "emailMessageByLink": "",
                            "emailSubject": "Verify your new account",
                            "emailSubjectByLink": "",
                            "smsMessage": "The verification code to your new account is {####}"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:CognitoUserPool::UserPool",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "accountRecoverySetting": [],
                        "adminCreateUserConfig": [],
                        "autoVerifiedAttributes": [],
                        "emailConfiguration": [],
                        "name": [],
                        "userPoolAddOns": [],
                        "usernameAttributes": [],
                        "usernameConfiguration": [],
                        "verificationMessageTemplate": []
                    },
                    "created": "2024-11-09T04:42:53.393633Z",
                    "modified": "2024-11-09T04:42:53.393633Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/cognito-user-pool.ts#478,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$pulumi-nodejs:dynamic:Resource::FrontendS3AccessControl.sst.aws.OriginAccessControl",
                    "custom": true,
                    "id": "E1DCCJY8FODL62",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.OriginAccessControl\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n          this.type = type;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n          return \"Resource.\" + this.type + \".\" + action;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n        return new Promise((resolve, reject) => {\n          const url = new URL(process.env.SST_SERVER + \"/rpc\");\n          const options = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.pathname,\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          const req = http.request(options, (res) => {\n            let data = \"\";\n            res.on(\"data\", (chunk) => {\n              data += chunk;\n            });\n            res.on(\"end\", () => {\n              if (res.statusCode !== 200) {\n                reject(new Error(`Failed to call RPC: ${data}`));\n                return;\n              }\n              try {\n                const json = JSON.parse(data);\n                if (json.error) {\n                  if (json.error.startsWith(\"rpc: can't find\")) {\n                    reject(new MethodNotFoundError(method));\n                    return;\n                  }\n                  reject(new Error(json.error));\n                  return;\n                }\n                resolve(json.result);\n              } catch (error) {\n                reject(new Error(`Failed to parse JSON: ${error.message}`));\n              }\n            });\n          });\n          req.on(\"error\", (error) => {\n            reject(error);\n          });\n          req.setTimeout(0);\n          const body = JSON.stringify({\n            jsonrpc: \"1.0\",\n            method,\n            params: [args]\n          });\n          req.write(body);\n          req.end();\n        });\n      };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n          return call(this.name(\"Create\"), inputs);\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n          return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return;\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n          return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError)\n              return {\n                id\n              };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n          return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return { id, props };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "name": "notes-dev-Frontend"
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.OriginAccessControl\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n          this.type = type;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n          return \"Resource.\" + this.type + \".\" + action;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n        return new Promise((resolve, reject) => {\n          const url = new URL(process.env.SST_SERVER + \"/rpc\");\n          const options = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.pathname,\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          const req = http.request(options, (res) => {\n            let data = \"\";\n            res.on(\"data\", (chunk) => {\n              data += chunk;\n            });\n            res.on(\"end\", () => {\n              if (res.statusCode !== 200) {\n                reject(new Error(`Failed to call RPC: ${data}`));\n                return;\n              }\n              try {\n                const json = JSON.parse(data);\n                if (json.error) {\n                  if (json.error.startsWith(\"rpc: can't find\")) {\n                    reject(new MethodNotFoundError(method));\n                    return;\n                  }\n                  reject(new Error(json.error));\n                  return;\n                }\n                resolve(json.result);\n              } catch (error) {\n                reject(new Error(`Failed to parse JSON: ${error.message}`));\n              }\n            });\n          });\n          req.on(\"error\", (error) => {\n            reject(error);\n          });\n          req.setTimeout(0);\n          const body = JSON.stringify({\n            jsonrpc: \"1.0\",\n            method,\n            params: [args]\n          });\n          req.write(body);\n          req.end();\n        });\n      };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n          return call(this.name(\"Create\"), inputs);\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n          return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return;\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n          return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError)\n              return {\n                id\n              };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n          return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return { id, props };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite::Frontend",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:pulumi-nodejs::default::e4b0a7d6-6fc3-4af8-80ad-4532ca6f6e5a",
                    "propertyDependencies": {
                        "__provider": [],
                        "name": []
                    },
                    "created": "2024-11-09T05:08:41.395904Z",
                    "modified": "2024-11-09T05:08:41.395904Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/providers/origin-access-control.ts#14,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                    "custom": true,
                    "id": "notes-dev-NotesTable",
                    "type": "aws:dynamodb/table:Table",
                    "inputs": {
                        "__defaults": [
                            "tableClass"
                        ],
                        "attributes": [
                            {
                                "__defaults": [],
                                "name": "userId",
                                "type": "S"
                            },
                            {
                                "__defaults": [],
                                "name": "noteId",
                                "type": "S"
                            }
                        ],
                        "billingMode": "PAY_PER_REQUEST",
                        "globalSecondaryIndexes": [],
                        "hashKey": "userId",
                        "localSecondaryIndexes": [],
                        "name": "notes-dev-NotesTable",
                        "pointInTimeRecovery": {
                            "__defaults": [],
                            "enabled": true
                        },
                        "rangeKey": "noteId",
                        "streamEnabled": false,
                        "tableClass": "STANDARD",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":1800000000000,\"delete\":600000000000,\"update\":3600000000000},\"schema_version\":\"1\"}",
                        "arn": "arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable",
                        "attributes": [
                            {
                                "name": "noteId",
                                "type": "S"
                            },
                            {
                                "name": "userId",
                                "type": "S"
                            }
                        ],
                        "billingMode": "PAY_PER_REQUEST",
                        "deletionProtectionEnabled": false,
                        "globalSecondaryIndexes": [],
                        "hashKey": "userId",
                        "id": "notes-dev-NotesTable",
                        "importTable": null,
                        "localSecondaryIndexes": [],
                        "name": "notes-dev-NotesTable",
                        "onDemandThroughput": null,
                        "pointInTimeRecovery": {
                            "enabled": true
                        },
                        "rangeKey": "noteId",
                        "readCapacity": 0,
                        "replicas": [],
                        "restoreDateTime": null,
                        "restoreSourceName": null,
                        "restoreSourceTableArn": null,
                        "restoreToLatestTime": null,
                        "serverSideEncryption": null,
                        "streamArn": "",
                        "streamEnabled": false,
                        "streamLabel": "",
                        "streamViewType": "",
                        "tableClass": "STANDARD",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "ttl": {
                            "attributeName": "",
                            "enabled": false
                        },
                        "writeCapacity": 0
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:Dynamo::Notes",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "attributes": [],
                        "billingMode": [],
                        "globalSecondaryIndexes": [],
                        "hashKey": [],
                        "localSecondaryIndexes": [],
                        "name": [],
                        "pointInTimeRecovery": [],
                        "rangeKey": [],
                        "streamEnabled": []
                    },
                    "created": "2024-11-09T04:43:50.601647Z",
                    "modified": "2024-11-09T04:43:50.601647Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/dynamodb/table.ts#383,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:Bucket$random:index/randomId:RandomId::UploadsId",
                    "custom": true,
                    "id": "icWXtYY_",
                    "type": "random:index/randomId:RandomId",
                    "inputs": {
                        "byteLength": 6
                    },
                    "outputs": {
                        "b64Std": "icWXtYY/",
                        "b64Url": "icWXtYY_",
                        "byteLength": 6,
                        "dec": "151481746818623",
                        "hex": "89c597b5863f",
                        "id": "icWXtYY_"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:Bucket::Uploads",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:random::default_4_16_7::c3f305d7-da99-4f4b-b7b4-b96da2872d9f",
                    "propertyDependencies": {
                        "byteLength": []
                    },
                    "created": "2024-11-09T04:42:16.791222Z",
                    "modified": "2024-11-09T04:42:16.791222Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/bucket.ts#393,26"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                    "custom": true,
                    "id": "lnta43z1q2",
                    "type": "aws:apigatewayv2/api:Api",
                    "inputs": {
                        "__defaults": [
                            "apiKeySelectionExpression",
                            "routeSelectionExpression"
                        ],
                        "apiKeySelectionExpression": "$request.header.x-api-key",
                        "corsConfiguration": {
                            "__defaults": [],
                            "allowHeaders": [
                                "*"
                            ],
                            "allowMethods": [
                                "*"
                            ],
                            "allowOrigins": [
                                "*"
                            ]
                        },
                        "name": "notes-dev-ApiApi",
                        "protocolType": "HTTP",
                        "routeSelectionExpression": "$request.method $request.path",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "apiEndpoint": "https://lnta43z1q2.execute-api.us-east-1.amazonaws.com",
                        "apiKeySelectionExpression": "$request.header.x-api-key",
                        "arn": "arn:aws:apigateway:us-east-1::/apis/lnta43z1q2",
                        "body": null,
                        "corsConfiguration": {
                            "allowCredentials": false,
                            "allowHeaders": [
                                "*"
                            ],
                            "allowMethods": [
                                "*"
                            ],
                            "allowOrigins": [
                                "*"
                            ],
                            "exposeHeaders": null,
                            "maxAge": 0
                        },
                        "credentialsArn": null,
                        "description": "",
                        "disableExecuteApiEndpoint": false,
                        "executionArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2",
                        "failOnWarnings": null,
                        "id": "lnta43z1q2",
                        "name": "notes-dev-ApiApi",
                        "protocolType": "HTTP",
                        "routeKey": null,
                        "routeSelectionExpression": "$request.method $request.path",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "target": null,
                        "version": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2::Api",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "corsConfiguration": [],
                        "name": [],
                        "protocolType": []
                    },
                    "created": "2024-11-09T04:42:52.65521Z",
                    "modified": "2024-11-09T04:42:52.65521Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2.ts#808,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:cloudwatch/logGroup:LogGroup::ApiAccessLog",
                    "custom": true,
                    "id": "/aws/vendedlogs/apis/notes-dev-Api",
                    "type": "aws:cloudwatch/logGroup:LogGroup",
                    "inputs": {
                        "__defaults": [
                            "skipDestroy"
                        ],
                        "name": "/aws/vendedlogs/apis/notes-dev-Api",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:logs:us-east-1:727646493992:log-group:/aws/vendedlogs/apis/notes-dev-Api",
                        "id": "/aws/vendedlogs/apis/notes-dev-Api",
                        "kmsKeyId": "",
                        "logGroupClass": "STANDARD",
                        "name": "/aws/vendedlogs/apis/notes-dev-Api",
                        "namePrefix": "",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2::Api",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "name": [],
                        "retentionInDays": []
                    },
                    "created": "2024-11-09T04:42:52.421397Z",
                    "modified": "2024-11-09T04:42:52.421397Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2.ts#822,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteBdfecwHandlerLogGroup",
                    "custom": true,
                    "id": "/aws/lambda/notes-dev-ApiRouteBdfecwHandlerFunction",
                    "type": "aws:cloudwatch/logGroup:LogGroup",
                    "inputs": {
                        "__defaults": [
                            "skipDestroy"
                        ],
                        "name": "/aws/lambda/notes-dev-ApiRouteBdfecwHandlerFunction",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:logs:us-east-1:727646493992:log-group:/aws/lambda/notes-dev-ApiRouteBdfecwHandlerFunction",
                        "id": "/aws/lambda/notes-dev-ApiRouteBdfecwHandlerFunction",
                        "kmsKeyId": "",
                        "logGroupClass": "STANDARD",
                        "name": "/aws/lambda/notes-dev-ApiRouteBdfecwHandlerFunction",
                        "namePrefix": "",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBdfecwHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "name": [],
                        "retentionInDays": []
                    },
                    "created": "2024-11-09T04:42:52.421401Z",
                    "modified": "2024-11-09T04:42:52.421401Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/cloudwatch/logGroup.ts#139,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$random:index/randomId:RandomId::FrontendAssetsId",
                    "custom": true,
                    "id": "IQCZ9Us5",
                    "type": "random:index/randomId:RandomId",
                    "inputs": {
                        "byteLength": 6
                    },
                    "outputs": {
                        "b64Std": "IQCZ9Us5",
                        "b64Url": "IQCZ9Us5",
                        "byteLength": 6,
                        "dec": "36286466706233",
                        "hex": "210099f54b39",
                        "id": "IQCZ9Us5"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket::FrontendAssets",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:random::default_4_16_7::c3f305d7-da99-4f4b-b7b4-b96da2872d9f",
                    "propertyDependencies": {
                        "byteLength": []
                    },
                    "created": "2024-11-09T05:08:41.203666Z",
                    "modified": "2024-11-09T05:08:41.203666Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/bucket.ts#393,26"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteOrcroeHandlerLogGroup",
                    "custom": true,
                    "id": "/aws/lambda/notes-dev-ApiRouteOrcroeHandlerFunction",
                    "type": "aws:cloudwatch/logGroup:LogGroup",
                    "inputs": {
                        "__defaults": [
                            "skipDestroy"
                        ],
                        "name": "/aws/lambda/notes-dev-ApiRouteOrcroeHandlerFunction",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:logs:us-east-1:727646493992:log-group:/aws/lambda/notes-dev-ApiRouteOrcroeHandlerFunction",
                        "id": "/aws/lambda/notes-dev-ApiRouteOrcroeHandlerFunction",
                        "kmsKeyId": "",
                        "logGroupClass": "STANDARD",
                        "name": "/aws/lambda/notes-dev-ApiRouteOrcroeHandlerFunction",
                        "namePrefix": "",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteOrcroeHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "name": [],
                        "retentionInDays": []
                    },
                    "created": "2024-11-09T04:42:52.42152Z",
                    "modified": "2024-11-09T04:42:52.42152Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/cloudwatch/logGroup.ts#139,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteBbovhwHandlerLogGroup",
                    "custom": true,
                    "id": "/aws/lambda/notes-dev-ApiRouteBbovhwHandlerFunction",
                    "type": "aws:cloudwatch/logGroup:LogGroup",
                    "inputs": {
                        "__defaults": [
                            "skipDestroy"
                        ],
                        "name": "/aws/lambda/notes-dev-ApiRouteBbovhwHandlerFunction",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:logs:us-east-1:727646493992:log-group:/aws/lambda/notes-dev-ApiRouteBbovhwHandlerFunction",
                        "id": "/aws/lambda/notes-dev-ApiRouteBbovhwHandlerFunction",
                        "kmsKeyId": "",
                        "logGroupClass": "STANDARD",
                        "name": "/aws/lambda/notes-dev-ApiRouteBbovhwHandlerFunction",
                        "namePrefix": "",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBbovhwHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "name": [],
                        "retentionInDays": []
                    },
                    "created": "2024-11-09T04:42:52.42136Z",
                    "modified": "2024-11-09T04:42:52.42136Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/cloudwatch/logGroup.ts#139,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteCmxatsHandlerLogGroup",
                    "custom": true,
                    "id": "/aws/lambda/notes-dev-ApiRouteCmxatsHandlerFunction",
                    "type": "aws:cloudwatch/logGroup:LogGroup",
                    "inputs": {
                        "__defaults": [
                            "skipDestroy"
                        ],
                        "name": "/aws/lambda/notes-dev-ApiRouteCmxatsHandlerFunction",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:logs:us-east-1:727646493992:log-group:/aws/lambda/notes-dev-ApiRouteCmxatsHandlerFunction",
                        "id": "/aws/lambda/notes-dev-ApiRouteCmxatsHandlerFunction",
                        "kmsKeyId": "",
                        "logGroupClass": "STANDARD",
                        "name": "/aws/lambda/notes-dev-ApiRouteCmxatsHandlerFunction",
                        "namePrefix": "",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteCmxatsHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "name": [],
                        "retentionInDays": []
                    },
                    "created": "2024-11-09T04:42:52.593023Z",
                    "modified": "2024-11-09T04:42:52.593023Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/cloudwatch/logGroup.ts#139,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteWhzhkaHandlerLogGroup",
                    "custom": true,
                    "id": "/aws/lambda/notes-dev-ApiRouteWhzhkaHandlerFunction",
                    "type": "aws:cloudwatch/logGroup:LogGroup",
                    "inputs": {
                        "__defaults": [
                            "skipDestroy"
                        ],
                        "name": "/aws/lambda/notes-dev-ApiRouteWhzhkaHandlerFunction",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:logs:us-east-1:727646493992:log-group:/aws/lambda/notes-dev-ApiRouteWhzhkaHandlerFunction",
                        "id": "/aws/lambda/notes-dev-ApiRouteWhzhkaHandlerFunction",
                        "kmsKeyId": "",
                        "logGroupClass": "STANDARD",
                        "name": "/aws/lambda/notes-dev-ApiRouteWhzhkaHandlerFunction",
                        "namePrefix": "",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteWhzhkaHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "name": [],
                        "retentionInDays": []
                    },
                    "created": "2024-11-09T04:42:52.416733Z",
                    "modified": "2024-11-09T04:42:52.416733Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/cloudwatch/logGroup.ts#139,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteBbbmxaHandlerLogGroup",
                    "custom": true,
                    "id": "/aws/lambda/notes-dev-ApiRouteBbbmxaHandlerFunction",
                    "type": "aws:cloudwatch/logGroup:LogGroup",
                    "inputs": {
                        "__defaults": [
                            "skipDestroy"
                        ],
                        "name": "/aws/lambda/notes-dev-ApiRouteBbbmxaHandlerFunction",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:logs:us-east-1:727646493992:log-group:/aws/lambda/notes-dev-ApiRouteBbbmxaHandlerFunction",
                        "id": "/aws/lambda/notes-dev-ApiRouteBbbmxaHandlerFunction",
                        "kmsKeyId": "",
                        "logGroupClass": "STANDARD",
                        "name": "/aws/lambda/notes-dev-ApiRouteBbbmxaHandlerFunction",
                        "namePrefix": "",
                        "retentionInDays": 30,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBbbmxaHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "name": [],
                        "retentionInDays": []
                    },
                    "created": "2024-11-09T04:42:52.442808Z",
                    "modified": "2024-11-09T04:42:52.442808Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/cloudwatch/logGroup.ts#139,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:CognitoUserPoolClient$aws:cognito/userPoolClient:UserPoolClient::UserPoolClientClient",
                    "custom": true,
                    "id": "2lvkh6d4augvn3ssa0ur4v66a2",
                    "type": "aws:cognito/userPoolClient:UserPoolClient",
                    "inputs": {
                        "allowedOauthFlows": [
                            "implicit",
                            "code"
                        ],
                        "allowedOauthFlowsUserPoolClient": true,
                        "allowedOauthScopes": [
                            "profile",
                            "phone",
                            "email",
                            "openid",
                            "aws.cognito.signin.user.admin"
                        ],
                        "callbackUrls": [
                            "https://example.com"
                        ],
                        "name": "UserPoolClient",
                        "supportedIdentityProviders": [
                            "COGNITO"
                        ],
                        "userPoolId": "us-east-1_GDeAq7b4Q"
                    },
                    "outputs": {
                        "accessTokenValidity": 0,
                        "allowedOauthFlows": [
                            "implicit",
                            "code"
                        ],
                        "allowedOauthFlowsUserPoolClient": true,
                        "allowedOauthScopes": [
                            "aws.cognito.signin.user.admin",
                            "phone",
                            "openid",
                            "profile",
                            "email"
                        ],
                        "authSessionValidity": 3,
                        "callbackUrls": [
                            "https://example.com"
                        ],
                        "clientSecret": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:Vv0qWih3U/jLMEHd:uYPqm/plwgPGaVVpCcffe+dg"
                        },
                        "defaultRedirectUri": "",
                        "enablePropagateAdditionalUserContextData": false,
                        "enableTokenRevocation": true,
                        "explicitAuthFlows": [],
                        "id": "2lvkh6d4augvn3ssa0ur4v66a2",
                        "idTokenValidity": 0,
                        "logoutUrls": [],
                        "name": "UserPoolClient",
                        "preventUserExistenceErrors": "",
                        "readAttributes": [],
                        "refreshTokenValidity": 30,
                        "supportedIdentityProviders": [
                            "COGNITO"
                        ],
                        "userPoolId": "us-east-1_GDeAq7b4Q",
                        "writeAttributes": []
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:CognitoUserPoolClient::UserPoolClient",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:CognitoUserPool$aws:cognito/userPool:UserPool::UserPoolUserPool"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "allowedOauthFlows": [],
                        "allowedOauthFlowsUserPoolClient": [],
                        "allowedOauthScopes": [],
                        "callbackUrls": [],
                        "name": [],
                        "supportedIdentityProviders": [],
                        "userPoolId": [
                            "urn:pulumi:dev::notes::sst:aws:CognitoUserPool$aws:cognito/userPool:UserPool::UserPoolUserPool"
                        ]
                    },
                    "additionalSecretOutputs": [
                        "clientSecret"
                    ],
                    "created": "2024-11-09T04:43:37.482798Z",
                    "modified": "2024-11-09T04:43:37.482798Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/cognito-user-pool-client.ts#44,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket",
                    "custom": true,
                    "id": "notes-dev-uploads-bftmfzsw",
                    "type": "aws:s3/bucketV2:BucketV2",
                    "inputs": {
                        "__defaults": [],
                        "bucket": "notes-dev-uploads-bftmfzsw",
                        "forceDestroy": true,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":1200000000000,\"delete\":3600000000000,\"read\":1200000000000,\"update\":1200000000000}}",
                        "accelerationStatus": "",
                        "acl": null,
                        "arn": "arn:aws:s3:::notes-dev-uploads-bftmfzsw",
                        "bucket": "notes-dev-uploads-bftmfzsw",
                        "bucketDomainName": "notes-dev-uploads-bftmfzsw.s3.amazonaws.com",
                        "bucketPrefix": "",
                        "bucketRegionalDomainName": "notes-dev-uploads-bftmfzsw.s3.us-east-1.amazonaws.com",
                        "corsRules": [],
                        "forceDestroy": true,
                        "grants": [
                            {
                                "id": "8653f0cc035ad657445588678afacc5d40b9f5151086f782f25b43960a422afd",
                                "permissions": [
                                    "FULL_CONTROL"
                                ],
                                "type": "CanonicalUser",
                                "uri": ""
                            }
                        ],
                        "hostedZoneId": "Z3AQBSTGFYJSTF",
                        "id": "notes-dev-uploads-bftmfzsw",
                        "lifecycleRules": [],
                        "loggings": [],
                        "objectLockConfiguration": null,
                        "objectLockEnabled": false,
                        "policy": "",
                        "region": "us-east-1",
                        "replicationConfigurations": [],
                        "requestPayer": "BucketOwner",
                        "serverSideEncryptionConfigurations": [
                            {
                                "rules": [
                                    {
                                        "applyServerSideEncryptionByDefaults": [
                                            {
                                                "kmsMasterKeyId": "",
                                                "sseAlgorithm": "AES256"
                                            }
                                        ],
                                        "bucketKeyEnabled": false
                                    }
                                ]
                            }
                        ],
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "versionings": [
                            {
                                "enabled": false,
                                "mfaDelete": false
                            }
                        ],
                        "websiteDomain": null,
                        "websiteEndpoint": null,
                        "websites": []
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:Bucket::Uploads",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:Bucket$random:index/randomId:RandomId::UploadsId"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [
                            "urn:pulumi:dev::notes::sst:aws:Bucket$random:index/randomId:RandomId::UploadsId"
                        ],
                        "forceDestroy": []
                    },
                    "created": "2024-11-09T04:42:17.988707Z",
                    "modified": "2024-11-09T04:42:17.988707Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/bucket.ts#407,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/stage:Stage::ApiStage",
                    "custom": true,
                    "id": "$default",
                    "type": "aws:apigatewayv2/stage:Stage",
                    "inputs": {
                        "__defaults": [],
                        "accessLogSettings": {
                            "__defaults": [],
                            "destinationArn": "arn:aws:logs:us-east-1:727646493992:log-group:/aws/vendedlogs/apis/notes-dev-Api",
                            "format": "{\"requestTime\":\"\\\"$context.requestTime\\\"\",\"requestId\":\"\\\"$context.requestId\\\"\",\"httpMethod\":\"\\\"$context.httpMethod\\\"\",\"path\":\"\\\"$context.path\\\"\",\"routeKey\":\"\\\"$context.routeKey\\\"\",\"status\":\"$context.status\",\"responseLatency\":\"$context.responseLatency\",\"integrationRequestId\":\"\\\"$context.integration.requestId\\\"\",\"integrationStatus\":\"\\\"$context.integration.status\\\"\",\"integrationLatency\":\"\\\"$context.integration.latency\\\"\",\"integrationServiceStatus\":\"\\\"$context.integration.integrationStatus\\\"\",\"ip\":\"\\\"$context.identity.sourceIp\\\"\",\"userAgent\":\"\\\"$context.identity.userAgent\\\"\"}"
                        },
                        "apiId": "lnta43z1q2",
                        "autoDeploy": true,
                        "name": "$default",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "accessLogSettings": {
                            "destinationArn": "arn:aws:logs:us-east-1:727646493992:log-group:/aws/vendedlogs/apis/notes-dev-Api",
                            "format": "{\"requestTime\":\"\\\"$context.requestTime\\\"\",\"requestId\":\"\\\"$context.requestId\\\"\",\"httpMethod\":\"\\\"$context.httpMethod\\\"\",\"path\":\"\\\"$context.path\\\"\",\"routeKey\":\"\\\"$context.routeKey\\\"\",\"status\":\"$context.status\",\"responseLatency\":\"$context.responseLatency\",\"integrationRequestId\":\"\\\"$context.integration.requestId\\\"\",\"integrationStatus\":\"\\\"$context.integration.status\\\"\",\"integrationLatency\":\"\\\"$context.integration.latency\\\"\",\"integrationServiceStatus\":\"\\\"$context.integration.integrationStatus\\\"\",\"ip\":\"\\\"$context.identity.sourceIp\\\"\",\"userAgent\":\"\\\"$context.identity.userAgent\\\"\"}"
                        },
                        "apiId": "lnta43z1q2",
                        "arn": "arn:aws:apigateway:us-east-1::/apis/lnta43z1q2/stages/$default",
                        "autoDeploy": true,
                        "clientCertificateId": "",
                        "defaultRouteSettings": {
                            "dataTraceEnabled": false,
                            "detailedMetricsEnabled": false,
                            "loggingLevel": "",
                            "throttlingBurstLimit": 0,
                            "throttlingRateLimit": 0
                        },
                        "deploymentId": "",
                        "description": "",
                        "executionArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/$default",
                        "id": "$default",
                        "invokeUrl": "https://lnta43z1q2.execute-api.us-east-1.amazonaws.com/",
                        "name": "$default",
                        "routeSettings": [],
                        "stageVariables": null,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2::Api",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:cloudwatch/logGroup:LogGroup::ApiAccessLog"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "accessLogSettings": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:cloudwatch/logGroup:LogGroup::ApiAccessLog"
                        ],
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "autoDeploy": [],
                        "name": []
                    },
                    "created": "2024-11-09T04:43:38.164696Z",
                    "modified": "2024-11-09T04:43:38.164696Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2.ts#838,7"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket",
                    "custom": true,
                    "id": "notes-dev-frontendassets-fxmotokn",
                    "type": "aws:s3/bucketV2:BucketV2",
                    "inputs": {
                        "__defaults": [],
                        "bucket": "notes-dev-frontendassets-fxmotokn",
                        "forceDestroy": true,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":1200000000000,\"delete\":3600000000000,\"read\":1200000000000,\"update\":1200000000000}}",
                        "accelerationStatus": "",
                        "acl": null,
                        "arn": "arn:aws:s3:::notes-dev-frontendassets-fxmotokn",
                        "bucket": "notes-dev-frontendassets-fxmotokn",
                        "bucketDomainName": "notes-dev-frontendassets-fxmotokn.s3.amazonaws.com",
                        "bucketPrefix": "",
                        "bucketRegionalDomainName": "notes-dev-frontendassets-fxmotokn.s3.us-east-1.amazonaws.com",
                        "corsRules": [],
                        "forceDestroy": true,
                        "grants": [
                            {
                                "id": "8653f0cc035ad657445588678afacc5d40b9f5151086f782f25b43960a422afd",
                                "permissions": [
                                    "FULL_CONTROL"
                                ],
                                "type": "CanonicalUser",
                                "uri": ""
                            }
                        ],
                        "hostedZoneId": "Z3AQBSTGFYJSTF",
                        "id": "notes-dev-frontendassets-fxmotokn",
                        "lifecycleRules": [],
                        "loggings": [],
                        "objectLockConfiguration": null,
                        "objectLockEnabled": false,
                        "policy": "",
                        "region": "us-east-1",
                        "replicationConfigurations": [],
                        "requestPayer": "BucketOwner",
                        "serverSideEncryptionConfigurations": [
                            {
                                "rules": [
                                    {
                                        "applyServerSideEncryptionByDefaults": [
                                            {
                                                "kmsMasterKeyId": "",
                                                "sseAlgorithm": "AES256"
                                            }
                                        ],
                                        "bucketKeyEnabled": false
                                    }
                                ]
                            }
                        ],
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "versionings": [
                            {
                                "enabled": false,
                                "mfaDelete": false
                            }
                        ],
                        "websiteDomain": null,
                        "websiteEndpoint": null,
                        "websites": []
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket::FrontendAssets",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$random:index/randomId:RandomId::FrontendAssetsId"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$random:index/randomId:RandomId::FrontendAssetsId"
                        ],
                        "forceDestroy": []
                    },
                    "created": "2024-11-09T05:08:42.483438Z",
                    "modified": "2024-11-09T05:08:42.483438Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/bucket.ts#407,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteBbovhwHandlerRole",
                    "custom": true,
                    "id": "notes-dev-ApiRouteBbovhwHandlerRole-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:*\",\n      \"Resource\": [\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"\n      ]\n    }\n  ]\n}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteBbovhwHandlerRole-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteBbovhwHandlerRole-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-11-09T04:43:50Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "notes-dev-ApiRouteBbovhwHandlerRole-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"dynamodb:*\",\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"]}]}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteBbovhwHandlerRole-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "uniqueId": "AROA2S2Y4LUUFFO5PMA6O"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBbovhwHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "assumeRolePolicy": [],
                        "inlinePolicies": [
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                        ],
                        "managedPolicyArns": [],
                        "name": []
                    },
                    "created": "2024-11-09T04:43:51.280694Z",
                    "modified": "2024-11-09T05:08:41.908293Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1721,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteOrcroeHandlerRole",
                    "custom": true,
                    "id": "notes-dev-ApiRouteOrcroeHandlerRole-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:*\",\n      \"Resource\": [\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"\n      ]\n    }\n  ]\n}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteOrcroeHandlerRole-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteOrcroeHandlerRole-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-11-09T04:43:50Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "notes-dev-ApiRouteOrcroeHandlerRole-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"dynamodb:*\",\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"]}]}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteOrcroeHandlerRole-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "uniqueId": "AROA2S2Y4LUUEYUAXKXPI"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteOrcroeHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "assumeRolePolicy": [],
                        "inlinePolicies": [
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                        ],
                        "managedPolicyArns": [],
                        "name": []
                    },
                    "created": "2024-11-09T04:43:51.2051Z",
                    "modified": "2024-11-09T05:08:41.843481Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1721,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteCmxatsHandlerRole",
                    "custom": true,
                    "id": "notes-dev-ApiRouteCmxatsHandlerRole-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:*\",\n      \"Resource\": [\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"\n      ]\n    }\n  ]\n}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteCmxatsHandlerRole-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteCmxatsHandlerRole-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-11-09T04:43:50Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "notes-dev-ApiRouteCmxatsHandlerRole-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"dynamodb:*\",\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"]}]}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteCmxatsHandlerRole-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "uniqueId": "AROA2S2Y4LUUBEES3TSN3"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteCmxatsHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "assumeRolePolicy": [],
                        "inlinePolicies": [
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                        ],
                        "managedPolicyArns": [],
                        "name": []
                    },
                    "created": "2024-11-09T04:43:51.255613Z",
                    "modified": "2024-11-09T05:08:41.824452Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1721,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteWhzhkaHandlerRole",
                    "custom": true,
                    "id": "notes-dev-ApiRouteWhzhkaHandlerRole-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:*\",\n      \"Resource\": [\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"\n      ]\n    }\n  ]\n}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteWhzhkaHandlerRole-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteWhzhkaHandlerRole-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-11-09T04:43:50Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "notes-dev-ApiRouteWhzhkaHandlerRole-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"dynamodb:*\",\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"]}]}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteWhzhkaHandlerRole-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "uniqueId": "AROA2S2Y4LUUNMISRIQVI"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteWhzhkaHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "assumeRolePolicy": [],
                        "inlinePolicies": [
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                        ],
                        "managedPolicyArns": [],
                        "name": []
                    },
                    "created": "2024-11-09T04:43:51.304419Z",
                    "modified": "2024-11-09T05:08:41.80328Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1721,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteBdfecwHandlerRole",
                    "custom": true,
                    "id": "notes-dev-ApiRouteBdfecwHandlerRole-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:*\",\n      \"Resource\": [\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"\n      ]\n    }\n  ]\n}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteBdfecwHandlerRole-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteBdfecwHandlerRole-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-11-09T04:43:50Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "notes-dev-ApiRouteBdfecwHandlerRole-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"dynamodb:*\",\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"]}]}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteBdfecwHandlerRole-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "uniqueId": "AROA2S2Y4LUUGAJFUNIN6"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBdfecwHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "assumeRolePolicy": [],
                        "inlinePolicies": [
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                        ],
                        "managedPolicyArns": [],
                        "name": []
                    },
                    "created": "2024-11-09T04:43:51.252516Z",
                    "modified": "2024-11-09T05:08:41.849757Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1721,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteBbbmxaHandlerRole",
                    "custom": true,
                    "id": "notes-dev-ApiRouteBbbmxaHandlerRole-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:*\",\n      \"Resource\": [\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\n        \"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"\n      ]\n    }\n  ]\n}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteBbbmxaHandlerRole-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteBbbmxaHandlerRole-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-11-09T04:43:50Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "notes-dev-ApiRouteBbbmxaHandlerRole-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"dynamodb:*\",\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable/*\",\"arn:aws:dynamodb:us-east-1:727646493992:table/notes-dev-NotesTable\"]}]}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-ApiRouteBbbmxaHandlerRole-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "uniqueId": "AROA2S2Y4LUUL33EV4FZ6"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBbbmxaHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "assumeRolePolicy": [],
                        "inlinePolicies": [
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                        ],
                        "managedPolicyArns": [],
                        "name": []
                    },
                    "created": "2024-11-09T04:43:51.308046Z",
                    "modified": "2024-11-09T05:08:41.84914Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/function.ts#1721,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:cognito/identityPool:IdentityPool::IdentityPoolIdentityPool",
                    "custom": true,
                    "id": "us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                    "type": "aws:cognito/identityPool:IdentityPool",
                    "inputs": {
                        "__defaults": [
                            "allowClassicFlow"
                        ],
                        "allowClassicFlow": false,
                        "allowUnauthenticatedIdentities": true,
                        "cognitoIdentityProviders": [
                            {
                                "__defaults": [
                                    "serverSideTokenCheck"
                                ],
                                "clientId": "2lvkh6d4augvn3ssa0ur4v66a2",
                                "providerName": "cognito-idp.us-east-1.amazonaws.com/us-east-1_GDeAq7b4Q",
                                "serverSideTokenCheck": false
                            }
                        ],
                        "identityPoolName": "notes-dev-IdentityPool",
                        "supportedLoginProviders": {},
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "allowClassicFlow": false,
                        "allowUnauthenticatedIdentities": true,
                        "arn": "arn:aws:cognito-identity:us-east-1:727646493992:identitypool/us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                        "cognitoIdentityProviders": [
                            {
                                "clientId": "2lvkh6d4augvn3ssa0ur4v66a2",
                                "providerName": "cognito-idp.us-east-1.amazonaws.com/us-east-1_GDeAq7b4Q",
                                "serverSideTokenCheck": false
                            }
                        ],
                        "developerProviderName": "",
                        "id": "us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                        "identityPoolName": "notes-dev-IdentityPool",
                        "openidConnectProviderArns": null,
                        "samlProviderArns": null,
                        "supportedLoginProviders": null,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool::IdentityPool",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:CognitoUserPool$aws:cognito/userPool:UserPool::UserPoolUserPool",
                        "urn:pulumi:dev::notes::sst:aws:CognitoUserPoolClient$aws:cognito/userPoolClient:UserPoolClient::UserPoolClientClient"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "allowUnauthenticatedIdentities": [],
                        "cognitoIdentityProviders": [
                            "urn:pulumi:dev::notes::sst:aws:CognitoUserPool$aws:cognito/userPool:UserPool::UserPoolUserPool",
                            "urn:pulumi:dev::notes::sst:aws:CognitoUserPoolClient$aws:cognito/userPoolClient:UserPoolClient::UserPoolClientClient"
                        ],
                        "identityPoolName": [],
                        "supportedLoginProviders": []
                    },
                    "created": "2024-11-09T04:43:37.847812Z",
                    "modified": "2024-11-09T04:43:37.847812Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/cognito-identity-pool.ts#173,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock::UploadsPublicAccessBlock",
                    "custom": true,
                    "id": "notes-dev-uploads-bftmfzsw",
                    "type": "aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock",
                    "inputs": {
                        "__defaults": [],
                        "blockPublicAcls": true,
                        "blockPublicPolicy": true,
                        "bucket": "notes-dev-uploads-bftmfzsw",
                        "ignorePublicAcls": true,
                        "restrictPublicBuckets": true
                    },
                    "outputs": {
                        "blockPublicAcls": true,
                        "blockPublicPolicy": true,
                        "bucket": "notes-dev-uploads-bftmfzsw",
                        "id": "notes-dev-uploads-bftmfzsw",
                        "ignorePublicAcls": true,
                        "restrictPublicBuckets": true
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:Bucket::Uploads",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "blockPublicAcls": [],
                        "blockPublicPolicy": [],
                        "bucket": [
                            "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket"
                        ],
                        "ignorePublicAcls": [],
                        "restrictPublicBuckets": []
                    },
                    "created": "2024-11-09T04:42:18.277607Z",
                    "modified": "2024-11-09T04:42:18.277607Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/bucket.ts#433,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketCorsConfigurationV2:BucketCorsConfigurationV2::UploadsCors",
                    "custom": true,
                    "id": "notes-dev-uploads-bftmfzsw",
                    "type": "aws:s3/bucketCorsConfigurationV2:BucketCorsConfigurationV2",
                    "inputs": {
                        "__defaults": [],
                        "bucket": "notes-dev-uploads-bftmfzsw",
                        "corsRules": [
                            {
                                "__defaults": [],
                                "allowedHeaders": [
                                    "*"
                                ],
                                "allowedMethods": [
                                    "DELETE",
                                    "GET",
                                    "HEAD",
                                    "POST",
                                    "PUT"
                                ],
                                "allowedOrigins": [
                                    "*"
                                ],
                                "maxAgeSeconds": 0
                            }
                        ]
                    },
                    "outputs": {
                        "bucket": "notes-dev-uploads-bftmfzsw",
                        "corsRules": [
                            {
                                "allowedHeaders": [
                                    "*"
                                ],
                                "allowedMethods": [
                                    "DELETE",
                                    "GET",
                                    "HEAD",
                                    "POST",
                                    "PUT"
                                ],
                                "allowedOrigins": [
                                    "*"
                                ],
                                "exposeHeaders": [],
                                "id": "",
                                "maxAgeSeconds": 0
                            }
                        ],
                        "expectedBucketOwner": "",
                        "id": "notes-dev-uploads-bftmfzsw"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:Bucket::Uploads",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [
                            "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket"
                        ],
                        "corsRules": []
                    },
                    "created": "2024-11-09T04:42:18.27769Z",
                    "modified": "2024-11-09T04:42:18.27769Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketCorsConfigurationV2.ts#132,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock::FrontendAssetsPublicAccessBlock",
                    "custom": true,
                    "id": "notes-dev-frontendassets-fxmotokn",
                    "type": "aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock",
                    "inputs": {
                        "__defaults": [],
                        "blockPublicAcls": true,
                        "blockPublicPolicy": true,
                        "bucket": "notes-dev-frontendassets-fxmotokn",
                        "ignorePublicAcls": true,
                        "restrictPublicBuckets": true
                    },
                    "outputs": {
                        "blockPublicAcls": true,
                        "blockPublicPolicy": true,
                        "bucket": "notes-dev-frontendassets-fxmotokn",
                        "id": "notes-dev-frontendassets-fxmotokn",
                        "ignorePublicAcls": true,
                        "restrictPublicBuckets": true
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket::FrontendAssets",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "blockPublicAcls": [],
                        "blockPublicPolicy": [],
                        "bucket": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket"
                        ],
                        "ignorePublicAcls": [],
                        "restrictPublicBuckets": []
                    },
                    "created": "2024-11-09T05:08:42.760856Z",
                    "modified": "2024-11-09T05:08:42.760856Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/bucket.ts#433,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketCorsConfigurationV2:BucketCorsConfigurationV2::FrontendAssetsCors",
                    "custom": true,
                    "id": "notes-dev-frontendassets-fxmotokn",
                    "type": "aws:s3/bucketCorsConfigurationV2:BucketCorsConfigurationV2",
                    "inputs": {
                        "__defaults": [],
                        "bucket": "notes-dev-frontendassets-fxmotokn",
                        "corsRules": [
                            {
                                "__defaults": [],
                                "allowedHeaders": [
                                    "*"
                                ],
                                "allowedMethods": [
                                    "DELETE",
                                    "GET",
                                    "HEAD",
                                    "POST",
                                    "PUT"
                                ],
                                "allowedOrigins": [
                                    "*"
                                ],
                                "maxAgeSeconds": 0
                            }
                        ]
                    },
                    "outputs": {
                        "bucket": "notes-dev-frontendassets-fxmotokn",
                        "corsRules": [
                            {
                                "allowedHeaders": [
                                    "*"
                                ],
                                "allowedMethods": [
                                    "DELETE",
                                    "GET",
                                    "HEAD",
                                    "POST",
                                    "PUT"
                                ],
                                "allowedOrigins": [
                                    "*"
                                ],
                                "exposeHeaders": [],
                                "id": "",
                                "maxAgeSeconds": 0
                            }
                        ],
                        "expectedBucketOwner": "",
                        "id": "notes-dev-frontendassets-fxmotokn"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket::FrontendAssets",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket"
                        ],
                        "corsRules": []
                    },
                    "created": "2024-11-09T05:08:42.853432Z",
                    "modified": "2024-11-09T05:08:42.853432Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketCorsConfigurationV2.ts#132,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketPolicy:BucketPolicy::UploadsPolicy",
                    "custom": true,
                    "id": "notes-dev-uploads-bftmfzsw",
                    "type": "aws:s3/bucketPolicy:BucketPolicy",
                    "inputs": {
                        "__defaults": [],
                        "bucket": "notes-dev-uploads-bftmfzsw",
                        "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::notes-dev-uploads-bftmfzsw/*\",\n        \"arn:aws:s3:::notes-dev-uploads-bftmfzsw\"\n      ],\n      \"Principal\": \"*\",\n      \"Condition\": {\n        \"Bool\": {\n          \"aws:SecureTransport\": \"false\"\n        }\n      }\n    }\n  ]\n}"
                    },
                    "outputs": {
                        "bucket": "notes-dev-uploads-bftmfzsw",
                        "id": "notes-dev-uploads-bftmfzsw",
                        "policy": "{\"Statement\":[{\"Action\":\"s3:*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}},\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":[\"arn:aws:s3:::notes-dev-uploads-bftmfzsw/*\",\"arn:aws:s3:::notes-dev-uploads-bftmfzsw\"]}],\"Version\":\"2012-10-17\"}"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:Bucket::Uploads",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock::UploadsPublicAccessBlock",
                        "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [
                            "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket"
                        ],
                        "policy": [
                            "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket"
                        ]
                    },
                    "created": "2024-11-09T04:42:18.789151Z",
                    "modified": "2024-11-09T04:42:18.789151Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketPolicy.ts#117,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketPolicy:BucketPolicy::FrontendAssetsPolicy",
                    "custom": true,
                    "id": "notes-dev-frontendassets-fxmotokn",
                    "type": "aws:s3/bucketPolicy:BucketPolicy",
                    "inputs": {
                        "__defaults": [],
                        "bucket": "notes-dev-frontendassets-fxmotokn",
                        "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::notes-dev-frontendassets-fxmotokn/*\",\n      \"Principal\": {\n        \"Service\": \"cloudfront.amazonaws.com\"\n      }\n    },\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::notes-dev-frontendassets-fxmotokn/*\",\n        \"arn:aws:s3:::notes-dev-frontendassets-fxmotokn\"\n      ],\n      \"Principal\": \"*\",\n      \"Condition\": {\n        \"Bool\": {\n          \"aws:SecureTransport\": \"false\"\n        }\n      }\n    }\n  ]\n}"
                    },
                    "outputs": {
                        "bucket": "notes-dev-frontendassets-fxmotokn",
                        "id": "notes-dev-frontendassets-fxmotokn",
                        "policy": "{\"Statement\":[{\"Action\":\"s3:GetObject\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"cloudfront.amazonaws.com\"},\"Resource\":\"arn:aws:s3:::notes-dev-frontendassets-fxmotokn/*\"},{\"Action\":\"s3:*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}},\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":[\"arn:aws:s3:::notes-dev-frontendassets-fxmotokn/*\",\"arn:aws:s3:::notes-dev-frontendassets-fxmotokn\"]}],\"Version\":\"2012-10-17\"}"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket::FrontendAssets",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock::FrontendAssetsPublicAccessBlock",
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket"
                        ],
                        "policy": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket"
                        ]
                    },
                    "created": "2024-11-09T05:08:43.149359Z",
                    "modified": "2024-11-09T05:08:43.149359Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketPolicy.ts#117,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:iam/role:Role::IdentityPoolUnauthRole",
                    "custom": true,
                    "id": "notes-dev-IdentityPoolUnauthRole-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"cognito-identity.amazonaws.com\"\n      },\n      \"Condition\": {\n        \"ForAnyValue:StringLike\": {\n          \"cognito-identity.amazonaws.com:amr\": \"unauthenticated\"\n        },\n        \"StringEquals\": {\n          \"cognito-identity.amazonaws.com:aud\": \"us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec\"\n        }\n      }\n    }\n  ]\n}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"mobileanalytics:PutEvents\",\n        \"cognito-sync:*\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
                            }
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-IdentityPoolUnauthRole-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::727646493992:role/notes-dev-IdentityPoolUnauthRole-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"ForAnyValue:StringLike\":{\"cognito-identity.amazonaws.com:amr\":\"unauthenticated\"},\"StringEquals\":{\"cognito-identity.amazonaws.com:aud\":\"us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"cognito-identity.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-11-09T04:43:38Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "notes-dev-IdentityPoolUnauthRole-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"mobileanalytics:PutEvents\",\"cognito-sync:*\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}"
                            }
                        ],
                        "managedPolicyArns": [],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-IdentityPoolUnauthRole-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "uniqueId": "AROA2S2Y4LUUGPG3R4CQT"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool::IdentityPool",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:cognito/identityPool:IdentityPool::IdentityPoolIdentityPool",
                        "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "assumeRolePolicy": [
                            "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:cognito/identityPool:IdentityPool::IdentityPoolIdentityPool"
                        ],
                        "inlinePolicies": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                            "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket"
                        ],
                        "name": []
                    },
                    "created": "2024-11-09T04:43:38.41353Z",
                    "modified": "2024-11-09T04:43:38.41353Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/cognito-identity-pool.ts#265,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:iam/role:Role::IdentityPoolAuthRole",
                    "custom": true,
                    "id": "notes-dev-IdentityPoolAuthRole-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"cognito-identity.amazonaws.com\"\n      },\n      \"Condition\": {\n        \"ForAnyValue:StringLike\": {\n          \"cognito-identity.amazonaws.com:amr\": \"authenticated\"\n        },\n        \"StringEquals\": {\n          \"cognito-identity.amazonaws.com:aud\": \"us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec\"\n        }\n      }\n    }\n  ]\n}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"mobileanalytics:PutEvents\",\n        \"cognito-sync:*\",\n        \"cognito-identity:*\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:*\",\n      \"Resource\": \"arn:aws:s3:::notes-dev-uploads-bftmfzsw/private/${cognito-identity.amazonaws.com:sub}/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"execute-api:*\",\n      \"Resource\": \"arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*/*/*\"\n    }\n  ]\n}"
                            }
                        ],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-IdentityPoolAuthRole-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::727646493992:role/notes-dev-IdentityPoolAuthRole-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"ForAnyValue:StringLike\":{\"cognito-identity.amazonaws.com:amr\":\"authenticated\"},\"StringEquals\":{\"cognito-identity.amazonaws.com:aud\":\"us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"cognito-identity.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-11-09T04:43:38Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "notes-dev-IdentityPoolAuthRole-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"mobileanalytics:PutEvents\",\"cognito-sync:*\",\"cognito-identity:*\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"s3:*\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:s3:::notes-dev-uploads-bftmfzsw/private/${cognito-identity.amazonaws.com:sub}/*\"},{\"Action\":\"execute-api:*\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*/*/*\"}]}"
                            }
                        ],
                        "managedPolicyArns": [],
                        "maxSessionDuration": 3600,
                        "name": "notes-dev-IdentityPoolAuthRole-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "uniqueId": "AROA2S2Y4LUUGE2WUOLC4"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool::IdentityPool",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:cognito/identityPool:IdentityPool::IdentityPoolIdentityPool",
                        "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "assumeRolePolicy": [
                            "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:cognito/identityPool:IdentityPool::IdentityPoolIdentityPool"
                        ],
                        "inlinePolicies": [
                            "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "name": []
                    },
                    "created": "2024-11-09T04:43:38.409691Z",
                    "modified": "2024-11-09T04:43:38.409691Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/cognito-identity-pool.ts#213,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:cognito/identityPoolRoleAttachment:IdentityPoolRoleAttachment::IdentityPoolRoleAttachment",
                    "custom": true,
                    "id": "us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                    "type": "aws:cognito/identityPoolRoleAttachment:IdentityPoolRoleAttachment",
                    "inputs": {
                        "__defaults": [],
                        "identityPoolId": "us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                        "roles": {
                            "authenticated": "arn:aws:iam::727646493992:role/notes-dev-IdentityPoolAuthRole-useast1",
                            "unauthenticated": "arn:aws:iam::727646493992:role/notes-dev-IdentityPoolUnauthRole-useast1"
                        }
                    },
                    "outputs": {
                        "id": "us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                        "identityPoolId": "us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                        "roleMappings": [],
                        "roles": {
                            "authenticated": "arn:aws:iam::727646493992:role/notes-dev-IdentityPoolAuthRole-useast1",
                            "unauthenticated": "arn:aws:iam::727646493992:role/notes-dev-IdentityPoolUnauthRole-useast1"
                        }
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool::IdentityPool",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:cognito/identityPool:IdentityPool::IdentityPoolIdentityPool",
                        "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:iam/role:Role::IdentityPoolAuthRole",
                        "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:iam/role:Role::IdentityPoolUnauthRole"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "identityPoolId": [
                            "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:cognito/identityPool:IdentityPool::IdentityPoolIdentityPool"
                        ],
                        "roles": [
                            "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:iam/role:Role::IdentityPoolUnauthRole",
                            "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:iam/role:Role::IdentityPoolAuthRole"
                        ]
                    },
                    "created": "2024-11-09T04:43:38.550926Z",
                    "modified": "2024-11-09T04:43:38.550926Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/cognito-identity-pool.ts#304,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBdfecwHandlerCode",
                    "custom": true,
                    "id": "assets/ApiRouteBdfecwHandler-code-d527bd9136559b227fe80cd59db3667875c909113ef3c868da194dcecde2501a.zip",
                    "type": "aws:s3/bucketObjectv2:BucketObjectv2",
                    "inputs": {
                        "__defaults": [
                            "forceDestroy"
                        ],
                        "bucket": "sst-asset-cbfvehvkrths",
                        "forceDestroy": false,
                        "key": "assets/ApiRouteBdfecwHandler-code-d527bd9136559b227fe80cd59db3667875c909113ef3c868da194dcecde2501a.zip",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "d527bd9136559b227fe80cd59db3667875c909113ef3c868da194dcecde2501a",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteBdfecwHandler/code.zip"
                        },
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "acl": null,
                        "arn": "arn:aws:s3:::sst-asset-cbfvehvkrths/assets/ApiRouteBdfecwHandler-code-d527bd9136559b227fe80cd59db3667875c909113ef3c868da194dcecde2501a.zip",
                        "bucket": "sst-asset-cbfvehvkrths",
                        "bucketKeyEnabled": false,
                        "cacheControl": "",
                        "checksumAlgorithm": null,
                        "checksumCrc32": "",
                        "checksumCrc32c": "",
                        "checksumSha1": "",
                        "checksumSha256": "",
                        "content": null,
                        "contentBase64": null,
                        "contentDisposition": "",
                        "contentEncoding": "",
                        "contentLanguage": "",
                        "contentType": "application/octet-stream",
                        "etag": "02e940137072e44ef6011b95af7eeba2",
                        "forceDestroy": false,
                        "id": "assets/ApiRouteBdfecwHandler-code-d527bd9136559b227fe80cd59db3667875c909113ef3c868da194dcecde2501a.zip",
                        "key": "assets/ApiRouteBdfecwHandler-code-d527bd9136559b227fe80cd59db3667875c909113ef3c868da194dcecde2501a.zip",
                        "kmsKeyId": null,
                        "metadata": null,
                        "objectLockLegalHoldStatus": "",
                        "objectLockMode": "",
                        "objectLockRetainUntilDate": "",
                        "overrideProvider": null,
                        "serverSideEncryption": "AES256",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "d527bd9136559b227fe80cd59db3667875c909113ef3c868da194dcecde2501a",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteBdfecwHandler/code.zip"
                        },
                        "sourceHash": null,
                        "storageClass": "STANDARD",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "versionId": "",
                        "websiteRedirect": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBdfecwHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [],
                        "key": [],
                        "source": []
                    },
                    "created": "2024-11-09T05:08:41.653747Z",
                    "modified": "2024-11-09T05:08:41.653747Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketObjectv2.ts#429,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBdfecwHandlerFunction",
                    "custom": true,
                    "id": "notes-dev-ApiRouteBdfecwHandlerFunction",
                    "type": "aws:lambda/function:Function",
                    "inputs": {
                        "__defaults": [
                            "reservedConcurrentExecutions",
                            "skipDestroy"
                        ],
                        "architectures": [
                            "x86_64"
                        ],
                        "description": "Api route POST /billing",
                        "environment": {
                            "__defaults": [],
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:3oSnLRt85zANGnhw:dM84hcXvexxOZUXskSD2OMYu9nOHRG65LDff+7MeESNyd2LNkbDAa3yfaAP0XiLYbb5WHTrV7oPQjrqS8aquitEqN9/J7pcBY2t+pauch6wwQrOG8XQgz6X7l8jEQYGbunkVrXPNDFOvl12/rF+osoxWtIgl3dsorsEr1KO54D4b2UBPZfwDqgbL2KFreavXg3urm5CA29L6r4ySWF0PwmV4mPw="
                            }
                        },
                        "handler": "packages/functions/src/billing.main",
                        "loggingConfig": {
                            "__defaults": [
                                "applicationLogLevel",
                                "systemLogLevel"
                            ],
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteBdfecwHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteBdfecwHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteBdfecwHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteBdfecwHandler-code-d527bd9136559b227fe80cd59db3667875c909113ef3c868da194dcecde2501a.zip",
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                        "architectures": [
                            "x86_64"
                        ],
                        "arn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBdfecwHandlerFunction",
                        "code": null,
                        "codeSha256": "1Se9kTZVmyJ/6AzVnbNmeHXJCRE+88ho2hlNzs3iUBo=",
                        "codeSigningConfigArn": "",
                        "deadLetterConfig": null,
                        "description": "Api route POST /billing",
                        "environment": {
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:aB9RZ62pZkcIcLAv:Cm2tVOuuMohTy0wh621ByvSeOg1suN++ztd0Xp4VZODiP4yCcXl6/3Cl+zAABvN/n21tKuBfVCHnPYZYnazz1LuTrNWbem/MQfLO0El1SAnHshQK3Ieb1GKRS6iQUMmeFtfQL0y5yv8r+TBeTkFSeqrwMt1bPV24mXNDIq/EQN20mPNWAsE5UPR2jjAvBAoj59AG7GriKgHpQDVzeXV2wh+WW/E="
                            }
                        },
                        "ephemeralStorage": {
                            "size": 512
                        },
                        "fileSystemConfig": null,
                        "handler": "packages/functions/src/billing.main",
                        "id": "notes-dev-ApiRouteBdfecwHandlerFunction",
                        "imageConfig": null,
                        "imageUri": "",
                        "invokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBdfecwHandlerFunction/invocations",
                        "kmsKeyArn": "",
                        "lastModified": "2024-11-09T05:08:47.000+0000",
                        "layers": null,
                        "loggingConfig": {
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteBdfecwHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteBdfecwHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "qualifiedArn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBdfecwHandlerFunction:$LATEST",
                        "qualifiedInvokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBdfecwHandlerFunction:$LATEST/invocations",
                        "replaceSecurityGroupsOnDestroy": null,
                        "replacementSecurityGroupIds": null,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteBdfecwHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteBdfecwHandler-code-d527bd9136559b227fe80cd59db3667875c909113ef3c868da194dcecde2501a.zip",
                        "s3ObjectVersion": null,
                        "signingJobArn": "",
                        "signingProfileVersionArn": "",
                        "skipDestroy": false,
                        "snapStart": null,
                        "sourceCodeHash": "",
                        "sourceCodeSize": 57290,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20,
                        "tracingConfig": {
                            "mode": "PassThrough"
                        },
                        "version": "$LATEST",
                        "vpcConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBdfecwHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteBdfecwHandlerLogGroup",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteBdfecwHandlerRole",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBdfecwHandlerCode",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "architectures": [],
                        "description": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "environment": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey"
                        ],
                        "handler": [],
                        "loggingConfig": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteBdfecwHandlerLogGroup"
                        ],
                        "memorySize": [],
                        "name": [],
                        "packageType": [],
                        "publish": [],
                        "role": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteBdfecwHandlerRole"
                        ],
                        "runtime": [],
                        "s3Bucket": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBdfecwHandlerCode"
                        ],
                        "s3Key": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBdfecwHandlerCode"
                        ],
                        "timeout": []
                    },
                    "created": "2024-11-09T04:44:05.818345Z",
                    "modified": "2024-11-09T05:08:53.362403Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/function.ts#551,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteBdfecwPermissions",
                    "custom": true,
                    "id": "ApiRouteBdfecwPermissions-caccdc1",
                    "type": "aws:lambda/permission:Permission",
                    "inputs": {
                        "__defaults": [
                            "statementId"
                        ],
                        "action": "lambda:InvokeFunction",
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:NHxMKbxudYICWQnZ:2MBLS8YMZdla/uuB4Y39b6ZlggqPyxfCkqvleFSo+E3mNMhOTQrJ7BweEuEZO5UJ3g7k0y/XiLSa6nkEarefj/JWOUGuQ2aOYp927E5E65hkdxlVQF2kyaRM8lGdnYcSKRCIjAr0vPw="
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteBdfecwPermissions-caccdc1"
                    },
                    "outputs": {
                        "action": "lambda:InvokeFunction",
                        "eventSourceToken": null,
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:Hx49rJ41aOOlRfTS:ANY2IIPFch2DAD+98FUYsy6nzaz4vML8IPfYrx+E/dM6ZVsbSogbn05jk4VKo5BFZhEpN54T4Sxw4sl9gMZ/g9PSCkEi2qheTac7f4BhqbdIyUYm3O3jenYsFifBnO+tYHCr8vwVue0="
                        },
                        "functionUrlAuthType": null,
                        "id": "ApiRouteBdfecwPermissions-caccdc1",
                        "principal": "apigateway.amazonaws.com",
                        "principalOrgId": null,
                        "qualifier": "",
                        "sourceAccount": null,
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteBdfecwPermissions-caccdc1",
                        "statementIdPrefix": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBdfecw",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBdfecwHandlerFunction",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "action": [],
                        "function": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBdfecwHandlerFunction"
                        ],
                        "principal": [],
                        "sourceArn": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ]
                    },
                    "created": "2024-11-09T04:44:05.989721Z",
                    "modified": "2024-11-09T04:44:05.989721Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#81,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteBdfecwIntegration",
                    "custom": true,
                    "id": "ohddnll",
                    "type": "aws:apigatewayv2/integration:Integration",
                    "inputs": {
                        "__defaults": [
                            "connectionType",
                            "passthroughBehavior"
                        ],
                        "apiId": "lnta43z1q2",
                        "connectionType": "INTERNET",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:0H4wqxpeUePYCpGO:sSAA6H9CDJjcKGIJSA4KvT4IBqfBKoG9cArD1WA9SBc1woQ26sbEaVp2Uj4IJbHhEdSmPcwPPn0Okv6lbs/FVj2NElJ9525mFj2qfzW6j7bIqhEq4iTtICFMdQu6+C5CW+7fVr44/24="
                        },
                        "passthroughBehavior": "WHEN_NO_MATCH",
                        "payloadFormatVersion": "2.0"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "connectionId": "",
                        "connectionType": "INTERNET",
                        "contentHandlingStrategy": "",
                        "credentialsArn": "",
                        "description": "",
                        "id": "ohddnll",
                        "integrationMethod": "POST",
                        "integrationResponseSelectionExpression": "",
                        "integrationSubtype": "",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:LCqxCWIW5w2/4U6b:w6Uhi9YsC1RueVUSglaUqFTFgY2K+cqflHt5ECwiCFbTivuYuWITEb6mI4GBnoXNB2TYZALzA2e/WE/hcmSoF6XSRa2lF1sqSVj9iNXV8ByiPM5qtKTWxlzuOl9xtv83XjEJrnnvSbs="
                        },
                        "passthroughBehavior": "",
                        "payloadFormatVersion": "2.0",
                        "requestParameters": null,
                        "requestTemplates": null,
                        "responseParameters": [],
                        "templateSelectionExpression": "",
                        "timeoutMilliseconds": 30000,
                        "tlsConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBdfecw",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBdfecwHandlerFunction",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteBdfecwPermissions"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "integrationType": [],
                        "integrationUri": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBdfecwHandlerFunction"
                        ],
                        "payloadFormatVersion": []
                    },
                    "created": "2024-11-09T04:44:06.264089Z",
                    "modified": "2024-11-09T04:44:06.264089Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#94,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/route:Route::ApiRouteBdfecwRoute",
                    "custom": true,
                    "id": "b85oql9",
                    "type": "aws:apigatewayv2/route:Route",
                    "inputs": {
                        "__defaults": [
                            "apiKeyRequired"
                        ],
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationType": "AWS_IAM",
                        "routeKey": "POST /billing",
                        "target": "integrations/ohddnll"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationScopes": null,
                        "authorizationType": "AWS_IAM",
                        "authorizerId": "",
                        "id": "b85oql9",
                        "modelSelectionExpression": "",
                        "operationName": "",
                        "requestModels": null,
                        "requestParameters": [],
                        "routeKey": "POST /billing",
                        "routeResponseSelectionExpression": "",
                        "target": "integrations/ohddnll"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBdfecw",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteBdfecwIntegration"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "authorizationType": [],
                        "routeKey": [],
                        "target": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteBdfecwIntegration"
                        ]
                    },
                    "created": "2024-11-09T04:44:06.504848Z",
                    "modified": "2024-11-09T04:44:06.504848Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/apigatewayv2/route.ts#192,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteCmxatsHandlerCode",
                    "custom": true,
                    "id": "assets/ApiRouteCmxatsHandler-code-a2d2411eb0a7818c73820c5fd9b7f0b1fb8c55f53da0e59f7407434a82ccfbf3.zip",
                    "type": "aws:s3/bucketObjectv2:BucketObjectv2",
                    "inputs": {
                        "__defaults": [
                            "forceDestroy"
                        ],
                        "bucket": "sst-asset-cbfvehvkrths",
                        "forceDestroy": false,
                        "key": "assets/ApiRouteCmxatsHandler-code-a2d2411eb0a7818c73820c5fd9b7f0b1fb8c55f53da0e59f7407434a82ccfbf3.zip",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "a2d2411eb0a7818c73820c5fd9b7f0b1fb8c55f53da0e59f7407434a82ccfbf3",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteCmxatsHandler/code.zip"
                        },
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "acl": null,
                        "arn": "arn:aws:s3:::sst-asset-cbfvehvkrths/assets/ApiRouteCmxatsHandler-code-a2d2411eb0a7818c73820c5fd9b7f0b1fb8c55f53da0e59f7407434a82ccfbf3.zip",
                        "bucket": "sst-asset-cbfvehvkrths",
                        "bucketKeyEnabled": false,
                        "cacheControl": "",
                        "checksumAlgorithm": null,
                        "checksumCrc32": "",
                        "checksumCrc32c": "",
                        "checksumSha1": "",
                        "checksumSha256": "",
                        "content": null,
                        "contentBase64": null,
                        "contentDisposition": "",
                        "contentEncoding": "",
                        "contentLanguage": "",
                        "contentType": "application/octet-stream",
                        "etag": "1f8603044f4f8c9fea88028b6d3227df",
                        "forceDestroy": false,
                        "id": "assets/ApiRouteCmxatsHandler-code-a2d2411eb0a7818c73820c5fd9b7f0b1fb8c55f53da0e59f7407434a82ccfbf3.zip",
                        "key": "assets/ApiRouteCmxatsHandler-code-a2d2411eb0a7818c73820c5fd9b7f0b1fb8c55f53da0e59f7407434a82ccfbf3.zip",
                        "kmsKeyId": null,
                        "metadata": null,
                        "objectLockLegalHoldStatus": "",
                        "objectLockMode": "",
                        "objectLockRetainUntilDate": "",
                        "overrideProvider": null,
                        "serverSideEncryption": "AES256",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "a2d2411eb0a7818c73820c5fd9b7f0b1fb8c55f53da0e59f7407434a82ccfbf3",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteCmxatsHandler/code.zip"
                        },
                        "sourceHash": null,
                        "storageClass": "STANDARD",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "versionId": "",
                        "websiteRedirect": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteCmxatsHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [],
                        "key": [],
                        "source": []
                    },
                    "created": "2024-11-09T05:08:41.729997Z",
                    "modified": "2024-11-09T05:08:41.729997Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketObjectv2.ts#429,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteCmxatsHandlerFunction",
                    "custom": true,
                    "id": "notes-dev-ApiRouteCmxatsHandlerFunction",
                    "type": "aws:lambda/function:Function",
                    "inputs": {
                        "__defaults": [
                            "reservedConcurrentExecutions",
                            "skipDestroy"
                        ],
                        "architectures": [
                            "x86_64"
                        ],
                        "description": "Api route DELETE /notes/{id}",
                        "environment": {
                            "__defaults": [],
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:3LGHmwNo7UmYOrzB:7lFWk6SiYr/CPU3O+GGcnymwjvenUBbK6PpgPJmjGYZH2l1OIIOMzjeUmEnP0AJcgTa+r7K5zPOM6bdsBUovFTsC7SNoVMQ1NSUC9Qtsp7MvFalFTLXjTADyPD8sKX5B1vYshwAyH9xq92Fa6AhpnzQLMT+B3qQX0pnnIS1+kxpOaR7AuX9TWHz/Cu1c9jkirOuSnznSuEMsA3wFugSSe/7ZArM="
                            }
                        },
                        "handler": "packages/functions/src/delete.main",
                        "loggingConfig": {
                            "__defaults": [
                                "applicationLogLevel",
                                "systemLogLevel"
                            ],
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteCmxatsHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteCmxatsHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteCmxatsHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteCmxatsHandler-code-a2d2411eb0a7818c73820c5fd9b7f0b1fb8c55f53da0e59f7407434a82ccfbf3.zip",
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                        "architectures": [
                            "x86_64"
                        ],
                        "arn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteCmxatsHandlerFunction",
                        "code": null,
                        "codeSha256": "otJBHrCngYxzggxf2bfwsfuMVfU9oOWfdAdDSoLM+/M=",
                        "codeSigningConfigArn": "",
                        "deadLetterConfig": null,
                        "description": "Api route DELETE /notes/{id}",
                        "environment": {
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:kJisKo25oFMyscsu:23JJm832Kut7Im7s9/9+q2p/3BrEr24/fddyVt3NIEtFrOhTv83zBgCNRoLiBQN8hUsCOEuORkcrrNPyHF6AUIuQnZ4m7N2g37A5cok9aVDt2GylHdSKln0PKCiPSX4rd0cxd+sSUvWlWpygwvOnklXTjjUh+hVOIi7/NysLNdKOOoDXKq9kRw8XTSgRgkxT/B33JqVBO9yiKktthM5vMvZhKf4="
                            }
                        },
                        "ephemeralStorage": {
                            "size": 512
                        },
                        "fileSystemConfig": null,
                        "handler": "packages/functions/src/delete.main",
                        "id": "notes-dev-ApiRouteCmxatsHandlerFunction",
                        "imageConfig": null,
                        "imageUri": "",
                        "invokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteCmxatsHandlerFunction/invocations",
                        "kmsKeyArn": "",
                        "lastModified": "2024-11-09T05:08:48.000+0000",
                        "layers": null,
                        "loggingConfig": {
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteCmxatsHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteCmxatsHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "qualifiedArn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteCmxatsHandlerFunction:$LATEST",
                        "qualifiedInvokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteCmxatsHandlerFunction:$LATEST/invocations",
                        "replaceSecurityGroupsOnDestroy": null,
                        "replacementSecurityGroupIds": null,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteCmxatsHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteCmxatsHandler-code-a2d2411eb0a7818c73820c5fd9b7f0b1fb8c55f53da0e59f7407434a82ccfbf3.zip",
                        "s3ObjectVersion": null,
                        "signingJobArn": "",
                        "signingProfileVersionArn": "",
                        "skipDestroy": false,
                        "snapStart": null,
                        "sourceCodeHash": "",
                        "sourceCodeSize": 172491,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20,
                        "tracingConfig": {
                            "mode": "PassThrough"
                        },
                        "version": "$LATEST",
                        "vpcConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteCmxatsHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteCmxatsHandlerLogGroup",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteCmxatsHandlerRole",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteCmxatsHandlerCode"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "architectures": [],
                        "description": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "environment": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey"
                        ],
                        "handler": [],
                        "loggingConfig": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteCmxatsHandlerLogGroup"
                        ],
                        "memorySize": [],
                        "name": [],
                        "packageType": [],
                        "publish": [],
                        "role": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteCmxatsHandlerRole"
                        ],
                        "runtime": [],
                        "s3Bucket": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteCmxatsHandlerCode"
                        ],
                        "s3Key": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteCmxatsHandlerCode"
                        ],
                        "timeout": []
                    },
                    "created": "2024-11-09T04:44:07.538485Z",
                    "modified": "2024-11-09T05:08:53.538066Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/function.ts#551,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBbovhwHandlerCode",
                    "custom": true,
                    "id": "assets/ApiRouteBbovhwHandler-code-eabe82dbff0a3fa2d0af55b708aae7307c0c1da91ed155cd3aeca97d79657e7d.zip",
                    "type": "aws:s3/bucketObjectv2:BucketObjectv2",
                    "inputs": {
                        "__defaults": [
                            "forceDestroy"
                        ],
                        "bucket": "sst-asset-cbfvehvkrths",
                        "forceDestroy": false,
                        "key": "assets/ApiRouteBbovhwHandler-code-eabe82dbff0a3fa2d0af55b708aae7307c0c1da91ed155cd3aeca97d79657e7d.zip",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "eabe82dbff0a3fa2d0af55b708aae7307c0c1da91ed155cd3aeca97d79657e7d",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteBbovhwHandler/code.zip"
                        },
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "acl": null,
                        "arn": "arn:aws:s3:::sst-asset-cbfvehvkrths/assets/ApiRouteBbovhwHandler-code-eabe82dbff0a3fa2d0af55b708aae7307c0c1da91ed155cd3aeca97d79657e7d.zip",
                        "bucket": "sst-asset-cbfvehvkrths",
                        "bucketKeyEnabled": false,
                        "cacheControl": "",
                        "checksumAlgorithm": null,
                        "checksumCrc32": "",
                        "checksumCrc32c": "",
                        "checksumSha1": "",
                        "checksumSha256": "",
                        "content": null,
                        "contentBase64": null,
                        "contentDisposition": "",
                        "contentEncoding": "",
                        "contentLanguage": "",
                        "contentType": "application/octet-stream",
                        "etag": "5c4ceffc1d7527453faaa9590e527b2d",
                        "forceDestroy": false,
                        "id": "assets/ApiRouteBbovhwHandler-code-eabe82dbff0a3fa2d0af55b708aae7307c0c1da91ed155cd3aeca97d79657e7d.zip",
                        "key": "assets/ApiRouteBbovhwHandler-code-eabe82dbff0a3fa2d0af55b708aae7307c0c1da91ed155cd3aeca97d79657e7d.zip",
                        "kmsKeyId": null,
                        "metadata": null,
                        "objectLockLegalHoldStatus": "",
                        "objectLockMode": "",
                        "objectLockRetainUntilDate": "",
                        "overrideProvider": null,
                        "serverSideEncryption": "AES256",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "eabe82dbff0a3fa2d0af55b708aae7307c0c1da91ed155cd3aeca97d79657e7d",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteBbovhwHandler/code.zip"
                        },
                        "sourceHash": null,
                        "storageClass": "STANDARD",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "versionId": "",
                        "websiteRedirect": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBbovhwHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [],
                        "key": [],
                        "source": []
                    },
                    "created": "2024-11-09T05:08:41.7134Z",
                    "modified": "2024-11-09T05:08:41.7134Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketObjectv2.ts#429,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteCmxatsPermissions",
                    "custom": true,
                    "id": "ApiRouteCmxatsPermissions-208999a",
                    "type": "aws:lambda/permission:Permission",
                    "inputs": {
                        "__defaults": [
                            "statementId"
                        ],
                        "action": "lambda:InvokeFunction",
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:58lmhbz7Um5kaxIl:9KMJFgl759DZH59D4ppiuZJOUdrtVeGDaFGMEXK3uYhsgqybn1giMZFt+4c/1Pv5V4izKvsANTbq99qc9Ovce81JpKAe5kWZY3Xaok95IfrkC746husoM6vntYKgFsallokjTXAgbJ4="
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteCmxatsPermissions-208999a"
                    },
                    "outputs": {
                        "action": "lambda:InvokeFunction",
                        "eventSourceToken": null,
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1://OmltCE23ys8/H3:B97eRck/8n+El80H/KJBhvpANCel6sIPtXRHG8kCIlOKBscth0hzMBE9F+hjtcSIj443Lhtq0JdVJKVVS2QLBzFINuXeSxczPa0mk8KH4jsbqTIz4Ukve1ljSub1h122HgkLb5Mp92E="
                        },
                        "functionUrlAuthType": null,
                        "id": "ApiRouteCmxatsPermissions-208999a",
                        "principal": "apigateway.amazonaws.com",
                        "principalOrgId": null,
                        "qualifier": "",
                        "sourceAccount": null,
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteCmxatsPermissions-208999a",
                        "statementIdPrefix": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteCmxats",
                    "dependencies": [
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteCmxatsHandlerFunction",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "action": [],
                        "function": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteCmxatsHandlerFunction"
                        ],
                        "principal": [],
                        "sourceArn": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ]
                    },
                    "created": "2024-11-09T04:44:07.710051Z",
                    "modified": "2024-11-09T04:44:07.710051Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#81,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBbovhwHandlerFunction",
                    "custom": true,
                    "id": "notes-dev-ApiRouteBbovhwHandlerFunction",
                    "type": "aws:lambda/function:Function",
                    "inputs": {
                        "__defaults": [
                            "reservedConcurrentExecutions",
                            "skipDestroy"
                        ],
                        "architectures": [
                            "x86_64"
                        ],
                        "description": "Api route GET /notes",
                        "environment": {
                            "__defaults": [],
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:EQXX8VsVlCyuf6sH:BdKhGzfQXelQiMQco94fcjd80gD/+MQYjLnL80fmjISc29//ff2oxX/sMNqIG6sJHrPgfNwxfgcomS1aKluRKaiJqrgMKEPnS8gyMz617DtBqyRAPQaVA4q3d2BmyoQaZCACwsFhO0li52x1ahxzxB5TBMzdnPAICOlPPfRPsB9reL10EIA8Vl2jtl+vr12R97AWNAwhWI19ZudMfQNqJxL0WXo="
                            }
                        },
                        "handler": "packages/functions/src/list.main",
                        "loggingConfig": {
                            "__defaults": [
                                "applicationLogLevel",
                                "systemLogLevel"
                            ],
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteBbovhwHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteBbovhwHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteBbovhwHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteBbovhwHandler-code-eabe82dbff0a3fa2d0af55b708aae7307c0c1da91ed155cd3aeca97d79657e7d.zip",
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                        "architectures": [
                            "x86_64"
                        ],
                        "arn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBbovhwHandlerFunction",
                        "code": null,
                        "codeSha256": "6r6C2/8KP6LQr1W3CKrnMHwMHake0VXNOuypfXllfn0=",
                        "codeSigningConfigArn": "",
                        "deadLetterConfig": null,
                        "description": "Api route GET /notes",
                        "environment": {
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:6wReUU13Ek3k9Hel:KqU18sd5PitW0c+iAvBQONYQZd5OKXYc3FvSyBTuvW1Rsxu23mog+0ESYEE3h0+AsTem32Z5jeZalr9v1qK9gATBHKMOVS/h4kAh5+2ViGXAvi7k1zNC0Eevdj462bKtiZg4G2atZJ0gr5zxOy/jnp0oo2KsPEF+YTpxoEdlXClSeJSYSWHD4vjtF4VsZsv26T3Y7QVjbLpLge5JFG7EAk6UViQ="
                            }
                        },
                        "ephemeralStorage": {
                            "size": 512
                        },
                        "fileSystemConfig": null,
                        "handler": "packages/functions/src/list.main",
                        "id": "notes-dev-ApiRouteBbovhwHandlerFunction",
                        "imageConfig": null,
                        "imageUri": "",
                        "invokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBbovhwHandlerFunction/invocations",
                        "kmsKeyArn": "",
                        "lastModified": "2024-11-09T05:08:48.000+0000",
                        "layers": null,
                        "loggingConfig": {
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteBbovhwHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteBbovhwHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "qualifiedArn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBbovhwHandlerFunction:$LATEST",
                        "qualifiedInvokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBbovhwHandlerFunction:$LATEST/invocations",
                        "replaceSecurityGroupsOnDestroy": null,
                        "replacementSecurityGroupIds": null,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteBbovhwHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteBbovhwHandler-code-eabe82dbff0a3fa2d0af55b708aae7307c0c1da91ed155cd3aeca97d79657e7d.zip",
                        "s3ObjectVersion": null,
                        "signingJobArn": "",
                        "signingProfileVersionArn": "",
                        "skipDestroy": false,
                        "snapStart": null,
                        "sourceCodeHash": "",
                        "sourceCodeSize": 172558,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20,
                        "tracingConfig": {
                            "mode": "PassThrough"
                        },
                        "version": "$LATEST",
                        "vpcConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBbovhwHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteBbovhwHandlerLogGroup",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteBbovhwHandlerRole",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBbovhwHandlerCode"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "architectures": [],
                        "description": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "environment": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey"
                        ],
                        "handler": [],
                        "loggingConfig": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteBbovhwHandlerLogGroup"
                        ],
                        "memorySize": [],
                        "name": [],
                        "packageType": [],
                        "publish": [],
                        "role": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteBbovhwHandlerRole"
                        ],
                        "runtime": [],
                        "s3Bucket": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBbovhwHandlerCode"
                        ],
                        "s3Key": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBbovhwHandlerCode"
                        ],
                        "timeout": []
                    },
                    "created": "2024-11-09T04:44:07.312728Z",
                    "modified": "2024-11-09T05:08:53.519666Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/function.ts#551,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteCmxatsIntegration",
                    "custom": true,
                    "id": "aodh2wn",
                    "type": "aws:apigatewayv2/integration:Integration",
                    "inputs": {
                        "__defaults": [
                            "connectionType",
                            "passthroughBehavior"
                        ],
                        "apiId": "lnta43z1q2",
                        "connectionType": "INTERNET",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:LoQUCX6mBjdWqW+1:2t133JsrNZ/Yyt80dNgyFqjtYBCPRi+5iMqlNrFOCQKixJtHmCSd2WjkeWuPHzkjSoCzhQR50yWE3RxXXGwXprhXa+JsZl9U4WxSFnWNiiasY6t3ho7dcAz8lMbzUUIaZtkswiKbbT8="
                        },
                        "passthroughBehavior": "WHEN_NO_MATCH",
                        "payloadFormatVersion": "2.0"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "connectionId": "",
                        "connectionType": "INTERNET",
                        "contentHandlingStrategy": "",
                        "credentialsArn": "",
                        "description": "",
                        "id": "aodh2wn",
                        "integrationMethod": "POST",
                        "integrationResponseSelectionExpression": "",
                        "integrationSubtype": "",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:CADxN26vE0xc6MSw:Y1jDiiwEQgGlSKqDsBFQc6L0+TKr4AYB24qx4uQNhSUPh+y0kk692Idglc3QqUpv/HfBh6xbHAynaB1xiz46o2y/5zeE1Ii3ZnI6pjoHHg41WSrnSK+UD2ubgtgkSKssxBlX5F6Uyus="
                        },
                        "passthroughBehavior": "",
                        "payloadFormatVersion": "2.0",
                        "requestParameters": null,
                        "requestTemplates": null,
                        "responseParameters": [],
                        "templateSelectionExpression": "",
                        "timeoutMilliseconds": 30000,
                        "tlsConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteCmxats",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteCmxatsPermissions",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteCmxatsHandlerFunction"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "integrationType": [],
                        "integrationUri": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteCmxatsHandlerFunction"
                        ],
                        "payloadFormatVersion": []
                    },
                    "created": "2024-11-09T04:44:07.961062Z",
                    "modified": "2024-11-09T04:44:07.961062Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#94,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteBbovhwPermissions",
                    "custom": true,
                    "id": "ApiRouteBbovhwPermissions-6d17116",
                    "type": "aws:lambda/permission:Permission",
                    "inputs": {
                        "__defaults": [
                            "statementId"
                        ],
                        "action": "lambda:InvokeFunction",
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:EycRO2C4YKJS3AX6:H8pPFfmIWyWTQYYRZm7bnMGW9JJBxiiEQvVBCBuRvgg+1VQaByaOTpbAHGuh0BCe1rus5BUF5rIVNvnMqlWZPDnB5SxpbcDC3rVvAF7k+xjHbWH1zZ19Kr21VkN+YZnEOTDJBDFNrSw="
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteBbovhwPermissions-6d17116"
                    },
                    "outputs": {
                        "action": "lambda:InvokeFunction",
                        "eventSourceToken": null,
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:RxATGrodFNYUO4Vs:UskxjtRuBMlOEVu5KRZL13kQqlkBK0go0XwXmUwEUkLmpgvz0creLI5jRnUGPcdI4V4AAA6ajqaMmc1fL5U4WwRRpV6+0I5gRZ/bnkovBwjJIpL07PL65msXytJHo4AmnQ1wBghK2ek="
                        },
                        "functionUrlAuthType": null,
                        "id": "ApiRouteBbovhwPermissions-6d17116",
                        "principal": "apigateway.amazonaws.com",
                        "principalOrgId": null,
                        "qualifier": "",
                        "sourceAccount": null,
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteBbovhwPermissions-6d17116",
                        "statementIdPrefix": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBbovhw",
                    "dependencies": [
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBbovhwHandlerFunction",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "action": [],
                        "function": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBbovhwHandlerFunction"
                        ],
                        "principal": [],
                        "sourceArn": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ]
                    },
                    "created": "2024-11-09T04:44:07.480101Z",
                    "modified": "2024-11-09T04:44:07.480101Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#81,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/route:Route::ApiRouteCmxatsRoute",
                    "custom": true,
                    "id": "l3wlq1o",
                    "type": "aws:apigatewayv2/route:Route",
                    "inputs": {
                        "__defaults": [
                            "apiKeyRequired"
                        ],
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationType": "AWS_IAM",
                        "routeKey": "DELETE /notes/{id}",
                        "target": "integrations/aodh2wn"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationScopes": null,
                        "authorizationType": "AWS_IAM",
                        "authorizerId": "",
                        "id": "l3wlq1o",
                        "modelSelectionExpression": "",
                        "operationName": "",
                        "requestModels": null,
                        "requestParameters": [],
                        "routeKey": "DELETE /notes/{id}",
                        "routeResponseSelectionExpression": "",
                        "target": "integrations/aodh2wn"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteCmxats",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteCmxatsIntegration"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "authorizationType": [],
                        "routeKey": [],
                        "target": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteCmxatsIntegration"
                        ]
                    },
                    "created": "2024-11-09T04:44:08.220061Z",
                    "modified": "2024-11-09T04:44:08.220061Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/apigatewayv2/route.ts#192,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteOrcroeHandlerCode",
                    "custom": true,
                    "id": "assets/ApiRouteOrcroeHandler-code-d5f9ff0ff550ca1c48ee3c3ebb050406b971fe3ef44b3835a73eba7389548f82.zip",
                    "type": "aws:s3/bucketObjectv2:BucketObjectv2",
                    "inputs": {
                        "__defaults": [
                            "forceDestroy"
                        ],
                        "bucket": "sst-asset-cbfvehvkrths",
                        "forceDestroy": false,
                        "key": "assets/ApiRouteOrcroeHandler-code-d5f9ff0ff550ca1c48ee3c3ebb050406b971fe3ef44b3835a73eba7389548f82.zip",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "d5f9ff0ff550ca1c48ee3c3ebb050406b971fe3ef44b3835a73eba7389548f82",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteOrcroeHandler/code.zip"
                        },
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "acl": null,
                        "arn": "arn:aws:s3:::sst-asset-cbfvehvkrths/assets/ApiRouteOrcroeHandler-code-d5f9ff0ff550ca1c48ee3c3ebb050406b971fe3ef44b3835a73eba7389548f82.zip",
                        "bucket": "sst-asset-cbfvehvkrths",
                        "bucketKeyEnabled": false,
                        "cacheControl": "",
                        "checksumAlgorithm": null,
                        "checksumCrc32": "",
                        "checksumCrc32c": "",
                        "checksumSha1": "",
                        "checksumSha256": "",
                        "content": null,
                        "contentBase64": null,
                        "contentDisposition": "",
                        "contentEncoding": "",
                        "contentLanguage": "",
                        "contentType": "application/octet-stream",
                        "etag": "4c8367231b715673c164f60fc70ece31",
                        "forceDestroy": false,
                        "id": "assets/ApiRouteOrcroeHandler-code-d5f9ff0ff550ca1c48ee3c3ebb050406b971fe3ef44b3835a73eba7389548f82.zip",
                        "key": "assets/ApiRouteOrcroeHandler-code-d5f9ff0ff550ca1c48ee3c3ebb050406b971fe3ef44b3835a73eba7389548f82.zip",
                        "kmsKeyId": null,
                        "metadata": null,
                        "objectLockLegalHoldStatus": "",
                        "objectLockMode": "",
                        "objectLockRetainUntilDate": "",
                        "overrideProvider": null,
                        "serverSideEncryption": "AES256",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "d5f9ff0ff550ca1c48ee3c3ebb050406b971fe3ef44b3835a73eba7389548f82",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteOrcroeHandler/code.zip"
                        },
                        "sourceHash": null,
                        "storageClass": "STANDARD",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "versionId": "",
                        "websiteRedirect": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteOrcroeHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [],
                        "key": [],
                        "source": []
                    },
                    "created": "2024-11-09T05:08:41.689439Z",
                    "modified": "2024-11-09T05:08:41.689439Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketObjectv2.ts#429,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteBbovhwIntegration",
                    "custom": true,
                    "id": "xcv1o1p",
                    "type": "aws:apigatewayv2/integration:Integration",
                    "inputs": {
                        "__defaults": [
                            "connectionType",
                            "passthroughBehavior"
                        ],
                        "apiId": "lnta43z1q2",
                        "connectionType": "INTERNET",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:iEnCwuR+H0czA1p8:nIEi6qm54gd49mZrugz5TNA2TYEXr8eulYuHS1vIKjTUjkbz31L/1GdoQUwT48OGnGTWR50NRJRJGDyMSXLxy8u8BEwKba04tYK62nr4go/rxtZYipj4UlD/p4woCDSEAk002fSPMXc="
                        },
                        "passthroughBehavior": "WHEN_NO_MATCH",
                        "payloadFormatVersion": "2.0"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "connectionId": "",
                        "connectionType": "INTERNET",
                        "contentHandlingStrategy": "",
                        "credentialsArn": "",
                        "description": "",
                        "id": "xcv1o1p",
                        "integrationMethod": "POST",
                        "integrationResponseSelectionExpression": "",
                        "integrationSubtype": "",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:NnVDwrfrsEQ6D16n:BqWEwTKkovN8A8+WGh1ig4XrvkF+0xt9hx98b4RlshAv+qigJBuqdT+TfbMiBHXVENWTJWiWI+sAPuj7EGQ3afTLblvpZvrw6qGSlH0Q2g6LPGu+Dn5+6DpxoqVP9fpym8Vy3hhsnfI="
                        },
                        "passthroughBehavior": "",
                        "payloadFormatVersion": "2.0",
                        "requestParameters": null,
                        "requestTemplates": null,
                        "responseParameters": [],
                        "templateSelectionExpression": "",
                        "timeoutMilliseconds": 30000,
                        "tlsConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBbovhw",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBbovhwHandlerFunction",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteBbovhwPermissions"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "integrationType": [],
                        "integrationUri": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBbovhwHandlerFunction"
                        ],
                        "payloadFormatVersion": []
                    },
                    "created": "2024-11-09T04:44:07.702202Z",
                    "modified": "2024-11-09T04:44:07.702202Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#94,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteOrcroeHandlerFunction",
                    "custom": true,
                    "id": "notes-dev-ApiRouteOrcroeHandlerFunction",
                    "type": "aws:lambda/function:Function",
                    "inputs": {
                        "__defaults": [
                            "reservedConcurrentExecutions",
                            "skipDestroy"
                        ],
                        "architectures": [
                            "x86_64"
                        ],
                        "description": "Api route POST /notes",
                        "environment": {
                            "__defaults": [],
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:3Sfs6zvPtLvekFD2:V40OpJiGt7UEncYATMRvXcVI89zPTD+sqniqrKeEX0rw1HnHkU0ZKtxGnERHytQXPHX3NUB4oGLOnrRrsBXyJ+9HIV8tMtH/6q1VyquSXvWxMGemHFUSVnEPHfCHhstwSYWYdcxNIBPjcVcepD6Objg6e4t8KHJqzPkfITA/fogAaceeMcm5LRyL+tu002ngnZ3LVEZ2y79MQx+dZPcMzmQeW/M="
                            }
                        },
                        "handler": "packages/functions/src/create.main",
                        "loggingConfig": {
                            "__defaults": [
                                "applicationLogLevel",
                                "systemLogLevel"
                            ],
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteOrcroeHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteOrcroeHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteOrcroeHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteOrcroeHandler-code-d5f9ff0ff550ca1c48ee3c3ebb050406b971fe3ef44b3835a73eba7389548f82.zip",
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                        "architectures": [
                            "x86_64"
                        ],
                        "arn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteOrcroeHandlerFunction",
                        "code": null,
                        "codeSha256": "1fn/D/VQyhxI7jw+uwUEBrlx/j70Szg1pz66c4lUj4I=",
                        "codeSigningConfigArn": "",
                        "deadLetterConfig": null,
                        "description": "Api route POST /notes",
                        "environment": {
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:0Jb6QBPba6wxaOrg:ycr1HjHSnhbfHMbE+MP2xVTJdT0pt/GGN+9j4mIsKPHYbdy8UdctBlrYUPIZ7vpwzjrgrjYCjaUEDSnIG0SebZBYR9I8yFtidKon1SZfBpApFF8RdlVc6YSk34aaGEndD2QGfrcPyx+q7OW2VesdBuiN3vRKVQ8bdm8FlWVyCFYrSd+yt/kZviUWiZG+owotV5yeUMDm751JKRpLvqXXehC+opo="
                            }
                        },
                        "ephemeralStorage": {
                            "size": 512
                        },
                        "fileSystemConfig": null,
                        "handler": "packages/functions/src/create.main",
                        "id": "notes-dev-ApiRouteOrcroeHandlerFunction",
                        "imageConfig": null,
                        "imageUri": "",
                        "invokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteOrcroeHandlerFunction/invocations",
                        "kmsKeyArn": "",
                        "lastModified": "2024-11-09T05:08:48.000+0000",
                        "layers": null,
                        "loggingConfig": {
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteOrcroeHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteOrcroeHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "qualifiedArn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteOrcroeHandlerFunction:$LATEST",
                        "qualifiedInvokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteOrcroeHandlerFunction:$LATEST/invocations",
                        "replaceSecurityGroupsOnDestroy": null,
                        "replacementSecurityGroupIds": null,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteOrcroeHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteOrcroeHandler-code-d5f9ff0ff550ca1c48ee3c3ebb050406b971fe3ef44b3835a73eba7389548f82.zip",
                        "s3ObjectVersion": null,
                        "signingJobArn": "",
                        "signingProfileVersionArn": "",
                        "skipDestroy": false,
                        "snapStart": null,
                        "sourceCodeHash": "",
                        "sourceCodeSize": 173692,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20,
                        "tracingConfig": {
                            "mode": "PassThrough"
                        },
                        "version": "$LATEST",
                        "vpcConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteOrcroeHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteOrcroeHandlerLogGroup",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteOrcroeHandlerRole",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteOrcroeHandlerCode"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "architectures": [],
                        "description": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "environment": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey"
                        ],
                        "handler": [],
                        "loggingConfig": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteOrcroeHandlerLogGroup"
                        ],
                        "memorySize": [],
                        "name": [],
                        "packageType": [],
                        "publish": [],
                        "role": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteOrcroeHandlerRole"
                        ],
                        "runtime": [],
                        "s3Bucket": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteOrcroeHandlerCode"
                        ],
                        "s3Key": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteOrcroeHandlerCode"
                        ],
                        "timeout": []
                    },
                    "created": "2024-11-09T04:44:07.538485Z",
                    "modified": "2024-11-09T05:08:53.477628Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/function.ts#551,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/route:Route::ApiRouteBbovhwRoute",
                    "custom": true,
                    "id": "ub1xi78",
                    "type": "aws:apigatewayv2/route:Route",
                    "inputs": {
                        "__defaults": [
                            "apiKeyRequired"
                        ],
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationType": "AWS_IAM",
                        "routeKey": "GET /notes",
                        "target": "integrations/xcv1o1p"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationScopes": null,
                        "authorizationType": "AWS_IAM",
                        "authorizerId": "",
                        "id": "ub1xi78",
                        "modelSelectionExpression": "",
                        "operationName": "",
                        "requestModels": null,
                        "requestParameters": [],
                        "routeKey": "GET /notes",
                        "routeResponseSelectionExpression": "",
                        "target": "integrations/xcv1o1p"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBbovhw",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteBbovhwIntegration"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "authorizationType": [],
                        "routeKey": [],
                        "target": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteBbovhwIntegration"
                        ]
                    },
                    "created": "2024-11-09T04:44:07.960824Z",
                    "modified": "2024-11-09T04:44:07.960824Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/apigatewayv2/route.ts#192,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBbbmxaHandlerCode",
                    "custom": true,
                    "id": "assets/ApiRouteBbbmxaHandler-code-94340222408710c01cb205b1e6c416f7d58d55d78fd38b1a443115f94e460ff7.zip",
                    "type": "aws:s3/bucketObjectv2:BucketObjectv2",
                    "inputs": {
                        "__defaults": [
                            "forceDestroy"
                        ],
                        "bucket": "sst-asset-cbfvehvkrths",
                        "forceDestroy": false,
                        "key": "assets/ApiRouteBbbmxaHandler-code-94340222408710c01cb205b1e6c416f7d58d55d78fd38b1a443115f94e460ff7.zip",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "94340222408710c01cb205b1e6c416f7d58d55d78fd38b1a443115f94e460ff7",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteBbbmxaHandler/code.zip"
                        },
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "acl": null,
                        "arn": "arn:aws:s3:::sst-asset-cbfvehvkrths/assets/ApiRouteBbbmxaHandler-code-94340222408710c01cb205b1e6c416f7d58d55d78fd38b1a443115f94e460ff7.zip",
                        "bucket": "sst-asset-cbfvehvkrths",
                        "bucketKeyEnabled": false,
                        "cacheControl": "",
                        "checksumAlgorithm": null,
                        "checksumCrc32": "",
                        "checksumCrc32c": "",
                        "checksumSha1": "",
                        "checksumSha256": "",
                        "content": null,
                        "contentBase64": null,
                        "contentDisposition": "",
                        "contentEncoding": "",
                        "contentLanguage": "",
                        "contentType": "application/octet-stream",
                        "etag": "4cf6a02603be57e8c8b5db14f96f9e9f",
                        "forceDestroy": false,
                        "id": "assets/ApiRouteBbbmxaHandler-code-94340222408710c01cb205b1e6c416f7d58d55d78fd38b1a443115f94e460ff7.zip",
                        "key": "assets/ApiRouteBbbmxaHandler-code-94340222408710c01cb205b1e6c416f7d58d55d78fd38b1a443115f94e460ff7.zip",
                        "kmsKeyId": null,
                        "metadata": null,
                        "objectLockLegalHoldStatus": "",
                        "objectLockMode": "",
                        "objectLockRetainUntilDate": "",
                        "overrideProvider": null,
                        "serverSideEncryption": "AES256",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "94340222408710c01cb205b1e6c416f7d58d55d78fd38b1a443115f94e460ff7",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteBbbmxaHandler/code.zip"
                        },
                        "sourceHash": null,
                        "storageClass": "STANDARD",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "versionId": "",
                        "websiteRedirect": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBbbmxaHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [],
                        "key": [],
                        "source": []
                    },
                    "created": "2024-11-09T05:08:41.947339Z",
                    "modified": "2024-11-09T05:08:41.947339Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketObjectv2.ts#429,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteOrcroePermissions",
                    "custom": true,
                    "id": "ApiRouteOrcroePermissions-4cc1695",
                    "type": "aws:lambda/permission:Permission",
                    "inputs": {
                        "__defaults": [
                            "statementId"
                        ],
                        "action": "lambda:InvokeFunction",
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:FqQf5vTYnXVvPb4M:8+nJ99aNbcQ5arZakTdV9VbnJhGravRpaGoyxMAXllwVnZjrRbYIH9HZ28Vc/EUjO5BpqBDYbb7DT7jpdqiq9FH0qB2wLWoznAfQ/IlmIZQZt8h6AOA9oSXWYZ4ttZSLHApOC4YurB4="
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteOrcroePermissions-4cc1695"
                    },
                    "outputs": {
                        "action": "lambda:InvokeFunction",
                        "eventSourceToken": null,
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:LbD08uv7ZHxY0V/+:wpPDKA0H6Z1AgGteGps4JoD7p19FKr1wmnZvfuwdalNCfBsJZD2dzcdtyhHDGlsgfGHrawEm9jsY/R6A7lWpEPNi/38S48XEXIY9y+ZlEzOg5dAQBg7CtwhtUosc8oAfnUu0812RJAs="
                        },
                        "functionUrlAuthType": null,
                        "id": "ApiRouteOrcroePermissions-4cc1695",
                        "principal": "apigateway.amazonaws.com",
                        "principalOrgId": null,
                        "qualifier": "",
                        "sourceAccount": null,
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteOrcroePermissions-4cc1695",
                        "statementIdPrefix": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteOrcroe",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteOrcroeHandlerFunction",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "action": [],
                        "function": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteOrcroeHandlerFunction",
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                        ],
                        "principal": [],
                        "sourceArn": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ]
                    },
                    "created": "2024-11-09T04:44:07.716542Z",
                    "modified": "2024-11-09T04:44:07.716542Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#81,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBbbmxaHandlerFunction",
                    "custom": true,
                    "id": "notes-dev-ApiRouteBbbmxaHandlerFunction",
                    "type": "aws:lambda/function:Function",
                    "inputs": {
                        "__defaults": [
                            "reservedConcurrentExecutions",
                            "skipDestroy"
                        ],
                        "architectures": [
                            "x86_64"
                        ],
                        "description": "Api route GET /notes/{id}",
                        "environment": {
                            "__defaults": [],
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:dXVZsI/psixju3ZU:w55KL1uMxJIt3FcdK+UBRKY7FlPyqDxqWNIBWVgwKAORTu7RctDOMp9/LgP8qYPPshhUoeP0CE+VNeUcGvGs9yIjtgwIPVOvPAq6TMMzEWpwrfYK1XgsJ0FTKkRGPSCnKmIGUGDTr203nHrzyMao/9RuATpiCWLbSPxaDD9/p/qEQh7pMSL11cP+lakW2YudNmELxwy7W+yCpktIb3yffVXax/A="
                            }
                        },
                        "handler": "packages/functions/src/get.main",
                        "loggingConfig": {
                            "__defaults": [
                                "applicationLogLevel",
                                "systemLogLevel"
                            ],
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteBbbmxaHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteBbbmxaHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteBbbmxaHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteBbbmxaHandler-code-94340222408710c01cb205b1e6c416f7d58d55d78fd38b1a443115f94e460ff7.zip",
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                        "architectures": [
                            "x86_64"
                        ],
                        "arn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBbbmxaHandlerFunction",
                        "code": null,
                        "codeSha256": "lDQCIkCHEMAcsgWx5sQW99WNVdeP04saRDEV+U5GD/c=",
                        "codeSigningConfigArn": "",
                        "deadLetterConfig": null,
                        "description": "Api route GET /notes/{id}",
                        "environment": {
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:EFBbFSESN9A/UDzl:khHFF7kItyow2eTpvkTxJvOYDpM6RoD/h3sgpJOO8uZBZmz3pGi23S+3sHTzMFBJfxlSEWOtqx2wnNFAh5pKleqwPnK2V4qYvy8kAa/G96FyhrOXEfMsewi/pqLNhNbh5Fp9c39BczHp8JP/qEc+4z0VzR8KO6ofmYem1L4hZMLXK4CUDO1SqXPfGbNBd8o+2qUjUzBvjPeFMDPgym9LVIsNdJA="
                            }
                        },
                        "ephemeralStorage": {
                            "size": 512
                        },
                        "fileSystemConfig": null,
                        "handler": "packages/functions/src/get.main",
                        "id": "notes-dev-ApiRouteBbbmxaHandlerFunction",
                        "imageConfig": null,
                        "imageUri": "",
                        "invokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBbbmxaHandlerFunction/invocations",
                        "kmsKeyArn": "",
                        "lastModified": "2024-11-09T05:08:48.000+0000",
                        "layers": null,
                        "loggingConfig": {
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteBbbmxaHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteBbbmxaHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "qualifiedArn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBbbmxaHandlerFunction:$LATEST",
                        "qualifiedInvokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteBbbmxaHandlerFunction:$LATEST/invocations",
                        "replaceSecurityGroupsOnDestroy": null,
                        "replacementSecurityGroupIds": null,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteBbbmxaHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteBbbmxaHandler-code-94340222408710c01cb205b1e6c416f7d58d55d78fd38b1a443115f94e460ff7.zip",
                        "s3ObjectVersion": null,
                        "signingJobArn": "",
                        "signingProfileVersionArn": "",
                        "skipDestroy": false,
                        "snapStart": null,
                        "sourceCodeHash": "",
                        "sourceCodeSize": 172148,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20,
                        "tracingConfig": {
                            "mode": "PassThrough"
                        },
                        "version": "$LATEST",
                        "vpcConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteBbbmxaHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteBbbmxaHandlerLogGroup",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteBbbmxaHandlerRole",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBbbmxaHandlerCode"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "architectures": [],
                        "description": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "environment": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey"
                        ],
                        "handler": [],
                        "loggingConfig": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteBbbmxaHandlerLogGroup"
                        ],
                        "memorySize": [],
                        "name": [],
                        "packageType": [],
                        "publish": [],
                        "role": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteBbbmxaHandlerRole"
                        ],
                        "runtime": [],
                        "s3Bucket": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBbbmxaHandlerCode"
                        ],
                        "s3Key": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteBbbmxaHandlerCode"
                        ],
                        "timeout": []
                    },
                    "created": "2024-11-09T04:44:06.786419Z",
                    "modified": "2024-11-09T05:08:53.477628Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/function.ts#551,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteOrcroeIntegration",
                    "custom": true,
                    "id": "67gpc8k",
                    "type": "aws:apigatewayv2/integration:Integration",
                    "inputs": {
                        "__defaults": [
                            "connectionType",
                            "passthroughBehavior"
                        ],
                        "apiId": "lnta43z1q2",
                        "connectionType": "INTERNET",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:MKcvMYZtwAUPHWHg:hH0q9AD6CmQKwUIa30uVTnZZ9/9g/o/HX8YcQgmsMC9lCjH6dLI+SAEeXf5cpvNxJrXqlCw9N+uhc2G3v5ibjNgijjPf0QGz+vYpD51ECzmQ219NMwLP7OkRygBNTTiSmz1ThkziABg="
                        },
                        "passthroughBehavior": "WHEN_NO_MATCH",
                        "payloadFormatVersion": "2.0"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "connectionId": "",
                        "connectionType": "INTERNET",
                        "contentHandlingStrategy": "",
                        "credentialsArn": "",
                        "description": "",
                        "id": "67gpc8k",
                        "integrationMethod": "POST",
                        "integrationResponseSelectionExpression": "",
                        "integrationSubtype": "",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:cLos8QFqcszaAFnW:5XE2NfiXyNWr8XskY5T7h45fWlXVG81Khs/rrCcYX/Oo6UzuHHVAW2KJgTudgnZzYqZFUT1T2vpkMb/x3wHmu3QDJcoanXytt+7nSnyzTJ/fBmhFHk7qMtDGa4ySUx3Rl7uQbMcfLEQ="
                        },
                        "passthroughBehavior": "",
                        "payloadFormatVersion": "2.0",
                        "requestParameters": null,
                        "requestTemplates": null,
                        "responseParameters": [],
                        "templateSelectionExpression": "",
                        "timeoutMilliseconds": 30000,
                        "tlsConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteOrcroe",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteOrcroePermissions",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteOrcroeHandlerFunction"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "integrationType": [],
                        "integrationUri": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteOrcroeHandlerFunction"
                        ],
                        "payloadFormatVersion": []
                    },
                    "created": "2024-11-09T04:44:07.961062Z",
                    "modified": "2024-11-09T04:44:07.961062Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#94,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteBbbmxaPermissions",
                    "custom": true,
                    "id": "ApiRouteBbbmxaPermissions-16ff977",
                    "type": "aws:lambda/permission:Permission",
                    "inputs": {
                        "__defaults": [
                            "statementId"
                        ],
                        "action": "lambda:InvokeFunction",
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:VywoTdBLqz30twRU:kskSIa47HKvboX/bW7I+1ySr4WJyzSoFpwR+l5iT+gdt1X68k1jNEFgdTJaO5huOobU5/4o/cshZlPmKAjmctEB5HqeJX97yEsDY+VFm9uu9WNWXT4gIbLYrap+TAxNE0jKuvmdzCCs="
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteBbbmxaPermissions-16ff977"
                    },
                    "outputs": {
                        "action": "lambda:InvokeFunction",
                        "eventSourceToken": null,
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:xd08YBSem2bdXzNQ:90C5RPXN9Ypd86j2OYp59tBMLOR2SWfHrk4LyUHBQuEJnRl//7eOGw8RKxFORlEcG34EsfIYpqAHmPKjBgA+9aG3AaHdz45yrxFxaXLzIVVp1nk6IJHh9azmupOJPpzfu6e47M9rmpw="
                        },
                        "functionUrlAuthType": null,
                        "id": "ApiRouteBbbmxaPermissions-16ff977",
                        "principal": "apigateway.amazonaws.com",
                        "principalOrgId": null,
                        "qualifier": "",
                        "sourceAccount": null,
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteBbbmxaPermissions-16ff977",
                        "statementIdPrefix": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBbbmxa",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBbbmxaHandlerFunction",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "action": [],
                        "function": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBbbmxaHandlerFunction"
                        ],
                        "principal": [],
                        "sourceArn": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ]
                    },
                    "created": "2024-11-09T04:44:06.946678Z",
                    "modified": "2024-11-09T04:44:06.946678Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#81,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/route:Route::ApiRouteOrcroeRoute",
                    "custom": true,
                    "id": "xhn2dp4",
                    "type": "aws:apigatewayv2/route:Route",
                    "inputs": {
                        "__defaults": [
                            "apiKeyRequired"
                        ],
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationType": "AWS_IAM",
                        "routeKey": "POST /notes",
                        "target": "integrations/67gpc8k"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationScopes": null,
                        "authorizationType": "AWS_IAM",
                        "authorizerId": "",
                        "id": "xhn2dp4",
                        "modelSelectionExpression": "",
                        "operationName": "",
                        "requestModels": null,
                        "requestParameters": [],
                        "routeKey": "POST /notes",
                        "routeResponseSelectionExpression": "",
                        "target": "integrations/67gpc8k"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteOrcroe",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteOrcroeIntegration"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "authorizationType": [],
                        "routeKey": [],
                        "target": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteOrcroeIntegration"
                        ]
                    },
                    "created": "2024-11-09T04:44:08.236097Z",
                    "modified": "2024-11-09T04:44:08.236097Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/apigatewayv2/route.ts#192,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteWhzhkaHandlerCode",
                    "custom": true,
                    "id": "assets/ApiRouteWhzhkaHandler-code-021838397e659c93c646009e3e26783f51448be19950972f49eace31b98aa4d8.zip",
                    "type": "aws:s3/bucketObjectv2:BucketObjectv2",
                    "inputs": {
                        "__defaults": [
                            "forceDestroy"
                        ],
                        "bucket": "sst-asset-cbfvehvkrths",
                        "forceDestroy": false,
                        "key": "assets/ApiRouteWhzhkaHandler-code-021838397e659c93c646009e3e26783f51448be19950972f49eace31b98aa4d8.zip",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "021838397e659c93c646009e3e26783f51448be19950972f49eace31b98aa4d8",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteWhzhkaHandler/code.zip"
                        },
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        }
                    },
                    "outputs": {
                        "acl": null,
                        "arn": "arn:aws:s3:::sst-asset-cbfvehvkrths/assets/ApiRouteWhzhkaHandler-code-021838397e659c93c646009e3e26783f51448be19950972f49eace31b98aa4d8.zip",
                        "bucket": "sst-asset-cbfvehvkrths",
                        "bucketKeyEnabled": false,
                        "cacheControl": "",
                        "checksumAlgorithm": null,
                        "checksumCrc32": "",
                        "checksumCrc32c": "",
                        "checksumSha1": "",
                        "checksumSha256": "",
                        "content": null,
                        "contentBase64": null,
                        "contentDisposition": "",
                        "contentEncoding": "",
                        "contentLanguage": "",
                        "contentType": "application/octet-stream",
                        "etag": "91a8c02f14f43ccdcf15056ef816d336",
                        "forceDestroy": false,
                        "id": "assets/ApiRouteWhzhkaHandler-code-021838397e659c93c646009e3e26783f51448be19950972f49eace31b98aa4d8.zip",
                        "key": "assets/ApiRouteWhzhkaHandler-code-021838397e659c93c646009e3e26783f51448be19950972f49eace31b98aa4d8.zip",
                        "kmsKeyId": null,
                        "metadata": null,
                        "objectLockLegalHoldStatus": "",
                        "objectLockMode": "",
                        "objectLockRetainUntilDate": "",
                        "overrideProvider": null,
                        "serverSideEncryption": "AES256",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "021838397e659c93c646009e3e26783f51448be19950972f49eace31b98aa4d8",
                            "path": "/Users/adam/Documents/GitHub/a16z-hack/.sst/artifacts/ApiRouteWhzhkaHandler/code.zip"
                        },
                        "sourceHash": null,
                        "storageClass": "STANDARD",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "versionId": "",
                        "websiteRedirect": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteWhzhkaHandler",
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "bucket": [],
                        "key": [],
                        "source": []
                    },
                    "created": "2024-11-09T05:08:41.87733Z",
                    "modified": "2024-11-09T05:08:41.87733Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketObjectv2.ts#429,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteBbbmxaIntegration",
                    "custom": true,
                    "id": "3mslgq7",
                    "type": "aws:apigatewayv2/integration:Integration",
                    "inputs": {
                        "__defaults": [
                            "connectionType",
                            "passthroughBehavior"
                        ],
                        "apiId": "lnta43z1q2",
                        "connectionType": "INTERNET",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:X34fdQyF4KSXcOSc:nfJ/T4pl2T7PmbGAVMX0cT9n6HtGi2Gn1mL/0XBWVWsarN+v6YcUnGGKAm+Pjy8rTvs2MxrPnLS532SmdadwyRtx2OrE4VoWjQaWeGQDBNqb+pxWT7uip4raM7JGXoENgV13XM9nUWI="
                        },
                        "passthroughBehavior": "WHEN_NO_MATCH",
                        "payloadFormatVersion": "2.0"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "connectionId": "",
                        "connectionType": "INTERNET",
                        "contentHandlingStrategy": "",
                        "credentialsArn": "",
                        "description": "",
                        "id": "3mslgq7",
                        "integrationMethod": "POST",
                        "integrationResponseSelectionExpression": "",
                        "integrationSubtype": "",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:aAnYnb15+pYaALV+:d8jnX6xIJHXxcOo6tcwIiboBWMgCma/hAxQ9a3jDEoHDd9wpP3gUYViHrblgACWPa0QF0g+CZlO6sf4C3tXGeNHbxmWi1ab41vZxpPnOth5BnV0oEbvtXWHtM4BGccR4EaXicJh+dcw="
                        },
                        "passthroughBehavior": "",
                        "payloadFormatVersion": "2.0",
                        "requestParameters": null,
                        "requestTemplates": null,
                        "responseParameters": [],
                        "templateSelectionExpression": "",
                        "timeoutMilliseconds": 30000,
                        "tlsConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBbbmxa",
                    "dependencies": [
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBbbmxaHandlerFunction",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteBbbmxaPermissions",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "integrationType": [],
                        "integrationUri": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteBbbmxaHandlerFunction"
                        ],
                        "payloadFormatVersion": []
                    },
                    "created": "2024-11-09T04:44:07.186594Z",
                    "modified": "2024-11-09T04:44:07.186594Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#94,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteWhzhkaHandlerFunction",
                    "custom": true,
                    "id": "notes-dev-ApiRouteWhzhkaHandlerFunction",
                    "type": "aws:lambda/function:Function",
                    "inputs": {
                        "__defaults": [
                            "reservedConcurrentExecutions",
                            "skipDestroy"
                        ],
                        "architectures": [
                            "x86_64"
                        ],
                        "description": "Api route PUT /notes/{id}",
                        "environment": {
                            "__defaults": [],
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:0z48tkDhzKwNSWvh:EKB+ASJ0A/d6Ey9+IEdLFY3zg6qNqgYsN5jn6qpnd2AXpYnYBsLIHQzuytKPYpphpzdipU3QQwQEfMJqYfp2WQAc991OnTdwFE4MCc7zIyJfysFahADDfgM1/bQM75spA2CNCCEldsu9P+jsa4mpC77TzMfdbVT3+PpQnaubauQs8Cqa9Zp0sfsKKTUKI3b9dvq2kucC3BpkMR6tqj5KQ9REVv8="
                            }
                        },
                        "handler": "packages/functions/src/update.main",
                        "loggingConfig": {
                            "__defaults": [
                                "applicationLogLevel",
                                "systemLogLevel"
                            ],
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteWhzhkaHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteWhzhkaHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteWhzhkaHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteWhzhkaHandler-code-021838397e659c93c646009e3e26783f51448be19950972f49eace31b98aa4d8.zip",
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                        "architectures": [
                            "x86_64"
                        ],
                        "arn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteWhzhkaHandlerFunction",
                        "code": null,
                        "codeSha256": "Ahg4OX5lnJPGRgCePiZ4P1FEi+GZUJcvSerOMbmKpNg=",
                        "codeSigningConfigArn": "",
                        "deadLetterConfig": null,
                        "description": "Api route PUT /notes/{id}",
                        "environment": {
                            "variables": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "v1:WR1iTbMEfIT0lKVa:Bb3pQZrG4WFQJWaoyLzLtc9a54K6KWO1JOkFbawYXviJ7ksrj88e5Rnc1y3upKAqEhEaj7lxUxguOa5dIYWtzxgbP2QMuJIQ2D6EWY1P3f264qSAcCYOfnU0RGsUPfB/tpmbVZTep6E5v+S9bOwVM4IO7FdrAK3cPU5KH8I7ODhMl+4nQWpKF+URlKB+mfhOMTUWf7e3zgGnItfHamyY/g5RA04="
                            }
                        },
                        "ephemeralStorage": {
                            "size": 512
                        },
                        "fileSystemConfig": null,
                        "handler": "packages/functions/src/update.main",
                        "id": "notes-dev-ApiRouteWhzhkaHandlerFunction",
                        "imageConfig": null,
                        "imageUri": "",
                        "invokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteWhzhkaHandlerFunction/invocations",
                        "kmsKeyArn": "",
                        "lastModified": "2024-11-09T05:08:48.000+0000",
                        "layers": null,
                        "loggingConfig": {
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/notes-dev-ApiRouteWhzhkaHandlerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "notes-dev-ApiRouteWhzhkaHandlerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "qualifiedArn": "arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteWhzhkaHandlerFunction:$LATEST",
                        "qualifiedInvokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:727646493992:function:notes-dev-ApiRouteWhzhkaHandlerFunction:$LATEST/invocations",
                        "replaceSecurityGroupsOnDestroy": null,
                        "replacementSecurityGroupIds": null,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::727646493992:role/notes-dev-ApiRouteWhzhkaHandlerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-cbfvehvkrths",
                        "s3Key": "assets/ApiRouteWhzhkaHandler-code-021838397e659c93c646009e3e26783f51448be19950972f49eace31b98aa4d8.zip",
                        "s3ObjectVersion": null,
                        "signingJobArn": "",
                        "signingProfileVersionArn": "",
                        "skipDestroy": false,
                        "snapStart": null,
                        "sourceCodeHash": "",
                        "sourceCodeSize": 172749,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "timeout": 20,
                        "tracingConfig": {
                            "mode": "PassThrough"
                        },
                        "version": "$LATEST",
                        "vpcConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function::ApiRouteWhzhkaHandler",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteWhzhkaHandlerLogGroup",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteWhzhkaHandlerRole",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteWhzhkaHandlerCode",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "architectures": [],
                        "description": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "environment": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey"
                        ],
                        "handler": [],
                        "loggingConfig": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::ApiRouteWhzhkaHandlerLogGroup"
                        ],
                        "memorySize": [],
                        "name": [],
                        "packageType": [],
                        "publish": [],
                        "role": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:iam/role:Role::ApiRouteWhzhkaHandlerRole"
                        ],
                        "runtime": [],
                        "s3Bucket": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteWhzhkaHandlerCode"
                        ],
                        "s3Key": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::ApiRouteWhzhkaHandlerCode"
                        ],
                        "timeout": []
                    },
                    "created": "2024-11-09T04:44:06.660389Z",
                    "modified": "2024-11-09T05:08:53.637689Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/function.ts#551,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/route:Route::ApiRouteBbbmxaRoute",
                    "custom": true,
                    "id": "evec36u",
                    "type": "aws:apigatewayv2/route:Route",
                    "inputs": {
                        "__defaults": [
                            "apiKeyRequired"
                        ],
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationType": "AWS_IAM",
                        "routeKey": "GET /notes/{id}",
                        "target": "integrations/3mslgq7"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationScopes": null,
                        "authorizationType": "AWS_IAM",
                        "authorizerId": "",
                        "id": "evec36u",
                        "modelSelectionExpression": "",
                        "operationName": "",
                        "requestModels": null,
                        "requestParameters": [],
                        "routeKey": "GET /notes/{id}",
                        "routeResponseSelectionExpression": "",
                        "target": "integrations/3mslgq7"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteBbbmxa",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteBbbmxaIntegration"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "authorizationType": [],
                        "routeKey": [],
                        "target": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteBbbmxaIntegration"
                        ]
                    },
                    "created": "2024-11-09T04:44:07.436248Z",
                    "modified": "2024-11-09T04:44:07.436248Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/apigatewayv2/route.ts#192,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteWhzhkaPermissions",
                    "custom": true,
                    "id": "ApiRouteWhzhkaPermissions-7d482eb",
                    "type": "aws:lambda/permission:Permission",
                    "inputs": {
                        "__defaults": [
                            "statementId"
                        ],
                        "action": "lambda:InvokeFunction",
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:7aUwWpTbZrwXMQvu:HIFzm9vfxnwGK4SNE5CMjdc75bJc8Hvk4fX4l9j1yYowrCNXxscttSEzIfxc1P+dqp57TaM0kJbT81dtDth4dlKN+PPRG+gvwqW7SEKa1xVK2Ncrc4appp+FikoOOVh+7XVaBkbXD6A="
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteWhzhkaPermissions-7d482eb"
                    },
                    "outputs": {
                        "action": "lambda:InvokeFunction",
                        "eventSourceToken": null,
                        "function": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:umgd5CbW42DbGoHH:9z4Yr2qCZHiqH1yRfzfiSzdbk7AD+5c56bPnPSawyV9oiBUk03rELHtITPxoPFyfgi74+kOxDCYJuCKe/h623YUF6xuq/YF5oaOJazooGuAQwAsJ0qsOYO3sqJ+f7CPyxDXIF8c9n00="
                        },
                        "functionUrlAuthType": null,
                        "id": "ApiRouteWhzhkaPermissions-7d482eb",
                        "principal": "apigateway.amazonaws.com",
                        "principalOrgId": null,
                        "qualifier": "",
                        "sourceAccount": null,
                        "sourceArn": "arn:aws:execute-api:us-east-1:727646493992:lnta43z1q2/*",
                        "statementId": "ApiRouteWhzhkaPermissions-7d482eb",
                        "statementIdPrefix": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteWhzhka",
                    "dependencies": [
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteWhzhkaHandlerFunction",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "action": [],
                        "function": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteWhzhkaHandlerFunction"
                        ],
                        "principal": [],
                        "sourceArn": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ]
                    },
                    "created": "2024-11-09T04:44:06.841712Z",
                    "modified": "2024-11-09T04:44:06.841712Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#81,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteWhzhkaIntegration",
                    "custom": true,
                    "id": "e26xuue",
                    "type": "aws:apigatewayv2/integration:Integration",
                    "inputs": {
                        "__defaults": [
                            "connectionType",
                            "passthroughBehavior"
                        ],
                        "apiId": "lnta43z1q2",
                        "connectionType": "INTERNET",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:M5SEfOtUyc+CmW/H:KgpSSLYwtyfrJzXKcSr36wmv+bekrZl/DQ/PF/7NURiR4Nd5omWFzXm7i2/boiJ3m36daFXY5RvF9xo+xJSoM6rSfuFVNxIYFdYXnYVxWeEnHXsIIUgC29FfGphMbOod1naaB2hgE/I="
                        },
                        "passthroughBehavior": "WHEN_NO_MATCH",
                        "payloadFormatVersion": "2.0"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "connectionId": "",
                        "connectionType": "INTERNET",
                        "contentHandlingStrategy": "",
                        "credentialsArn": "",
                        "description": "",
                        "id": "e26xuue",
                        "integrationMethod": "POST",
                        "integrationResponseSelectionExpression": "",
                        "integrationSubtype": "",
                        "integrationType": "AWS_PROXY",
                        "integrationUri": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:oYgaeGgKEd+dWm58:m7MO45tFiijLYseDisszEgZWxBpEAAVOtMGt6VJbRAK5qToay1892JyeJuuX0R8wXFfGHoGkmhK4p2R7X3oLSHQnzgJNG6rtt+n3zY2SZuD5oadEssz+WfDyD/3ZVDhfeO7tiLFWEOQ="
                        },
                        "passthroughBehavior": "",
                        "payloadFormatVersion": "2.0",
                        "requestParameters": null,
                        "requestTemplates": null,
                        "responseParameters": [],
                        "templateSelectionExpression": "",
                        "timeoutMilliseconds": 30000,
                        "tlsConfig": null
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteWhzhka",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                        "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteWhzhkaHandlerFunction",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:lambda/permission:Permission::ApiRouteWhzhkaPermissions"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "integrationType": [],
                        "integrationUri": [
                            "urn:pulumi:dev::notes::random:index/randomBytes:RandomBytes::LambdaEncryptionKey",
                            "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$sst:aws:Function$aws:lambda/function:Function::ApiRouteWhzhkaHandlerFunction"
                        ],
                        "payloadFormatVersion": []
                    },
                    "created": "2024-11-09T04:44:07.066071Z",
                    "modified": "2024-11-09T04:44:07.066071Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/apigatewayv2-lambda-route.ts#94,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/route:Route::ApiRouteWhzhkaRoute",
                    "custom": true,
                    "id": "0wiy0ni",
                    "type": "aws:apigatewayv2/route:Route",
                    "inputs": {
                        "__defaults": [
                            "apiKeyRequired"
                        ],
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationType": "AWS_IAM",
                        "routeKey": "PUT /notes/{id}",
                        "target": "integrations/e26xuue"
                    },
                    "outputs": {
                        "apiId": "lnta43z1q2",
                        "apiKeyRequired": false,
                        "authorizationScopes": null,
                        "authorizationType": "AWS_IAM",
                        "authorizerId": "",
                        "id": "0wiy0ni",
                        "modelSelectionExpression": "",
                        "operationName": "",
                        "requestModels": null,
                        "requestParameters": [],
                        "routeKey": "PUT /notes/{id}",
                        "routeResponseSelectionExpression": "",
                        "target": "integrations/e26xuue"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute::ApiRouteWhzhka",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteWhzhkaIntegration"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "apiId": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "authorizationType": [],
                        "routeKey": [],
                        "target": [
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2LambdaRoute$aws:apigatewayv2/integration:Integration::ApiRouteWhzhkaIntegration"
                        ]
                    },
                    "created": "2024-11-09T04:44:07.312247Z",
                    "modified": "2024-11-09T04:44:07.312247Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/apigatewayv2/route.ts#192,9"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$pulumi-nodejs:dynamic:Resource::FrontendBuild.sst.Run",
                    "custom": true,
                    "id": "run",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Run\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n          this.type = type;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n          return \"Resource.\" + this.type + \".\" + action;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n        return new Promise((resolve, reject) => {\n          const url = new URL(process.env.SST_SERVER + \"/rpc\");\n          const options = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.pathname,\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          const req = http.request(options, (res) => {\n            let data = \"\";\n            res.on(\"data\", (chunk) => {\n              data += chunk;\n            });\n            res.on(\"end\", () => {\n              if (res.statusCode !== 200) {\n                reject(new Error(`Failed to call RPC: ${data}`));\n                return;\n              }\n              try {\n                const json = JSON.parse(data);\n                if (json.error) {\n                  if (json.error.startsWith(\"rpc: can't find\")) {\n                    reject(new MethodNotFoundError(method));\n                    return;\n                  }\n                  reject(new Error(json.error));\n                  return;\n                }\n                resolve(json.result);\n              } catch (error) {\n                reject(new Error(`Failed to parse JSON: ${error.message}`));\n              }\n            });\n          });\n          req.on(\"error\", (error) => {\n            reject(error);\n          });\n          req.setTimeout(0);\n          const body = JSON.stringify({\n            jsonrpc: \"1.0\",\n            method,\n            params: [args]\n          });\n          req.write(body);\n          req.end();\n        });\n      };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n          return call(this.name(\"Create\"), inputs);\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n          return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return;\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n          return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError)\n              return {\n                id\n              };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n          return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return { id, props };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "command": "npm run build",
                        "cwd": "packages/frontend",
                        "env": {
                            "VITE_API_URL": "https://lnta43z1q2.execute-api.us-east-1.amazonaws.com",
                            "VITE_BUCKET": "notes-dev-uploads-bftmfzsw",
                            "VITE_IDENTITY_POOL_ID": "us-east-1:6e9e8931-3b6b-49da-b69f-2acd4bd016ec",
                            "VITE_REGION": "us-east-1",
                            "VITE_USER_POOL_CLIENT_ID": "2lvkh6d4augvn3ssa0ur4v66a2",
                            "VITE_USER_POOL_ID": "us-east-1_GDeAq7b4Q"
                        },
                        "version": "1731129408196"
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Run\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n          this.type = type;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n          return \"Resource.\" + this.type + \".\" + action;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n        return new Promise((resolve, reject) => {\n          const url = new URL(process.env.SST_SERVER + \"/rpc\");\n          const options = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.pathname,\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          const req = http.request(options, (res) => {\n            let data = \"\";\n            res.on(\"data\", (chunk) => {\n              data += chunk;\n            });\n            res.on(\"end\", () => {\n              if (res.statusCode !== 200) {\n                reject(new Error(`Failed to call RPC: ${data}`));\n                return;\n              }\n              try {\n                const json = JSON.parse(data);\n                if (json.error) {\n                  if (json.error.startsWith(\"rpc: can't find\")) {\n                    reject(new MethodNotFoundError(method));\n                    return;\n                  }\n                  reject(new Error(json.error));\n                  return;\n                }\n                resolve(json.result);\n              } catch (error) {\n                reject(new Error(`Failed to parse JSON: ${error.message}`));\n              }\n            });\n          });\n          req.on(\"error\", (error) => {\n            reject(error);\n          });\n          req.setTimeout(0);\n          const body = JSON.stringify({\n            jsonrpc: \"1.0\",\n            method,\n            params: [args]\n          });\n          req.write(body);\n          req.end();\n        });\n      };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n          return call(this.name(\"Create\"), inputs);\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n          return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return;\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n          return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError)\n              return {\n                id\n              };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n          return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return { id, props };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite::Frontend",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:CognitoUserPoolClient$aws:cognito/userPoolClient:UserPoolClient::UserPoolClientClient",
                        "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi",
                        "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket",
                        "urn:pulumi:dev::notes::sst:aws:CognitoUserPool$aws:cognito/userPool:UserPool::UserPoolUserPool",
                        "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:cognito/identityPool:IdentityPool::IdentityPoolIdentityPool"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:pulumi-nodejs::default::e4b0a7d6-6fc3-4af8-80ad-4532ca6f6e5a",
                    "propertyDependencies": {
                        "__provider": [],
                        "command": [],
                        "cwd": [],
                        "env": [
                            "urn:pulumi:dev::notes::sst:aws:Bucket$aws:s3/bucketV2:BucketV2::UploadsBucket",
                            "urn:pulumi:dev::notes::sst:aws:CognitoUserPool$aws:cognito/userPool:UserPool::UserPoolUserPool",
                            "urn:pulumi:dev::notes::sst:aws:CognitoIdentityPool$aws:cognito/identityPool:IdentityPool::IdentityPoolIdentityPool",
                            "urn:pulumi:dev::notes::sst:aws:CognitoUserPoolClient$aws:cognito/userPoolClient:UserPoolClient::UserPoolClientClient",
                            "urn:pulumi:dev::notes::sst:aws:ApiGatewayV2$aws:apigatewayv2/api:Api::ApiApi"
                        ],
                        "version": []
                    },
                    "created": "2024-11-09T05:08:47.702141Z",
                    "modified": "2024-11-09T05:16:56.432046Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/providers/run.ts#13,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$pulumi-nodejs:dynamic:Resource::FrontendAssetFiles.sst.aws.BucketFiles",
                    "custom": true,
                    "id": "files",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.BucketFiles\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n          this.type = type;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n          return \"Resource.\" + this.type + \".\" + action;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n        return new Promise((resolve, reject) => {\n          const url = new URL(process.env.SST_SERVER + \"/rpc\");\n          const options = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.pathname,\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          const req = http.request(options, (res) => {\n            let data = \"\";\n            res.on(\"data\", (chunk) => {\n              data += chunk;\n            });\n            res.on(\"end\", () => {\n              if (res.statusCode !== 200) {\n                reject(new Error(`Failed to call RPC: ${data}`));\n                return;\n              }\n              try {\n                const json = JSON.parse(data);\n                if (json.error) {\n                  if (json.error.startsWith(\"rpc: can't find\")) {\n                    reject(new MethodNotFoundError(method));\n                    return;\n                  }\n                  reject(new Error(json.error));\n                  return;\n                }\n                resolve(json.result);\n              } catch (error) {\n                reject(new Error(`Failed to parse JSON: ${error.message}`));\n              }\n            });\n          });\n          req.on(\"error\", (error) => {\n            reject(error);\n          });\n          req.setTimeout(0);\n          const body = JSON.stringify({\n            jsonrpc: \"1.0\",\n            method,\n            params: [args]\n          });\n          req.write(body);\n          req.end();\n        });\n      };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n          return call(this.name(\"Create\"), inputs);\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n          return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return;\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n          return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError)\n              return {\n                id\n              };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n          return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return { id, props };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "bucketName": "notes-dev-frontendassets-fxmotokn",
                        "files": [
                            {
                                "cacheControl": "max-age=31536000,public,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "de22573caa5d30c785f0bf670dcfdd22b5c33e34dea659bed09099d8e9c71993",
                                "key": "assets/index-vcv-WuAP.js",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/assets/index-vcv-WuAP.js"
                            },
                            {
                                "cacheControl": "max-age=31536000,public,immutable",
                                "contentType": "text/css;charset=UTF-8",
                                "hash": "e7e5a74d7d4668f69bdefda5c4d5550e82a09a9a2d1ecdb9fe2f4be430e7cd0e",
                                "key": "assets/index-CalEiYr8.css",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/assets/index-CalEiYr8.css"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "application/manifest+json;charset=UTF-8",
                                "hash": "c9e354256c2441ae1eaeca18cbb538ad3a0c3a811bf2bcb1a1c518ce27822d9d",
                                "key": "site.webmanifest",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/site.webmanifest"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "d3f00e8ec0fb157023b244a1dfa79251193a84a7a0928c9fc836939dae7e4248",
                                "key": "mstile-150x150.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/mstile-150x150.png"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "text/html;charset=UTF-8",
                                "hash": "c624b7471caf72f225d4e204a5822cdfc37cc97fd60380352df61cd6894b6e00",
                                "key": "index.html",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/index.html"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/vnd.microsoft.icon",
                                "hash": "2e672d1354dbf66dd2c81334bd71b630a1d0caf5c0adf14052de142c1c4cfdcc",
                                "key": "favicon.ico",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/favicon.ico"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "b7561ce5968f30826bbdcaf4ad6d052361626f247106e078068e4e75eb354913",
                                "key": "favicon-32x32.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/favicon-32x32.png"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "b2a9f63feaded3da4778a5a07606e1937eea190b3633eb2c8a1a246d4b8cd48e",
                                "key": "favicon-16x16.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/favicon-16x16.png"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "application/xml;charset=UTF-8",
                                "hash": "c348b0d6df3d900efef7ae4b4dfc8b62b1737b04d09d4584fef243211c266866",
                                "key": "browserconfig.xml",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/browserconfig.xml"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "74cdafd4ac73f6e2e6ef6a41581b513d25d40eece3f0226de3675328915a8ed8",
                                "key": "apple-touch-icon.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/apple-touch-icon.png"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "977c575b1f1f35b68bd2a035e851fe61c425ab4d382f5dbecf66f755fe1337a2",
                                "key": "android-chrome-256x256.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/android-chrome-256x256.png"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "9d81d35040f1c411aa74516fd5856b91ee46b5437bb2d0daeefff0518b3649db",
                                "key": "android-chrome-192x192.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/android-chrome-192x192.png"
                            }
                        ],
                        "purge": true,
                        "region": "us-east-1"
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.BucketFiles\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n          this.type = type;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n          return \"Resource.\" + this.type + \".\" + action;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n        return new Promise((resolve, reject) => {\n          const url = new URL(process.env.SST_SERVER + \"/rpc\");\n          const options = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.pathname,\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          const req = http.request(options, (res) => {\n            let data = \"\";\n            res.on(\"data\", (chunk) => {\n              data += chunk;\n            });\n            res.on(\"end\", () => {\n              if (res.statusCode !== 200) {\n                reject(new Error(`Failed to call RPC: ${data}`));\n                return;\n              }\n              try {\n                const json = JSON.parse(data);\n                if (json.error) {\n                  if (json.error.startsWith(\"rpc: can't find\")) {\n                    reject(new MethodNotFoundError(method));\n                    return;\n                  }\n                  reject(new Error(json.error));\n                  return;\n                }\n                resolve(json.result);\n              } catch (error) {\n                reject(new Error(`Failed to parse JSON: ${error.message}`));\n              }\n            });\n          });\n          req.on(\"error\", (error) => {\n            reject(error);\n          });\n          req.setTimeout(0);\n          const body = JSON.stringify({\n            jsonrpc: \"1.0\",\n            method,\n            params: [args]\n          });\n          req.write(body);\n          req.end();\n        });\n      };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n          return call(this.name(\"Create\"), inputs);\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n          return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return;\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n          return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError)\n              return {\n                id\n              };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n          return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return { id, props };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "bucketName": "notes-dev-frontendassets-fxmotokn",
                        "files": [
                            {
                                "cacheControl": "max-age=31536000,public,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "de22573caa5d30c785f0bf670dcfdd22b5c33e34dea659bed09099d8e9c71993",
                                "key": "assets/index-vcv-WuAP.js",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/assets/index-vcv-WuAP.js"
                            },
                            {
                                "cacheControl": "max-age=31536000,public,immutable",
                                "contentType": "text/css;charset=UTF-8",
                                "hash": "e7e5a74d7d4668f69bdefda5c4d5550e82a09a9a2d1ecdb9fe2f4be430e7cd0e",
                                "key": "assets/index-CalEiYr8.css",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/assets/index-CalEiYr8.css"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "application/manifest+json;charset=UTF-8",
                                "hash": "c9e354256c2441ae1eaeca18cbb538ad3a0c3a811bf2bcb1a1c518ce27822d9d",
                                "key": "site.webmanifest",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/site.webmanifest"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "d3f00e8ec0fb157023b244a1dfa79251193a84a7a0928c9fc836939dae7e4248",
                                "key": "mstile-150x150.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/mstile-150x150.png"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "text/html;charset=UTF-8",
                                "hash": "c624b7471caf72f225d4e204a5822cdfc37cc97fd60380352df61cd6894b6e00",
                                "key": "index.html",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/index.html"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/vnd.microsoft.icon",
                                "hash": "2e672d1354dbf66dd2c81334bd71b630a1d0caf5c0adf14052de142c1c4cfdcc",
                                "key": "favicon.ico",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/favicon.ico"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "b7561ce5968f30826bbdcaf4ad6d052361626f247106e078068e4e75eb354913",
                                "key": "favicon-32x32.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/favicon-32x32.png"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "b2a9f63feaded3da4778a5a07606e1937eea190b3633eb2c8a1a246d4b8cd48e",
                                "key": "favicon-16x16.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/favicon-16x16.png"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "application/xml;charset=UTF-8",
                                "hash": "c348b0d6df3d900efef7ae4b4dfc8b62b1737b04d09d4584fef243211c266866",
                                "key": "browserconfig.xml",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/browserconfig.xml"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "74cdafd4ac73f6e2e6ef6a41581b513d25d40eece3f0226de3675328915a8ed8",
                                "key": "apple-touch-icon.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/apple-touch-icon.png"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "977c575b1f1f35b68bd2a035e851fe61c425ab4d382f5dbecf66f755fe1337a2",
                                "key": "android-chrome-256x256.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/android-chrome-256x256.png"
                            },
                            {
                                "cacheControl": "max-age=0,no-cache,no-store,must-revalidate",
                                "contentType": "image/png",
                                "hash": "9d81d35040f1c411aa74516fd5856b91ee46b5437bb2d0daeefff0518b3649db",
                                "key": "android-chrome-192x192.png",
                                "source": "/Users/adam/Documents/GitHub/a16z-hack/packages/frontend/dist/android-chrome-192x192.png"
                            }
                        ],
                        "purge": true,
                        "region": "us-east-1"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite::Frontend",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:pulumi-nodejs::default::e4b0a7d6-6fc3-4af8-80ad-4532ca6f6e5a",
                    "propertyDependencies": {
                        "__provider": [],
                        "bucketName": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket"
                        ],
                        "files": [],
                        "purge": [],
                        "region": []
                    },
                    "created": "2024-11-09T05:08:48.980005Z",
                    "modified": "2024-11-09T05:16:58.036989Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/providers/bucket-files.ts#25,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN::FrontendCdn",
                    "custom": false,
                    "type": "sst:aws:CDN",
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite::Frontend",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$pulumi-nodejs:dynamic:Resource::FrontendAssetFiles.sst.aws.BucketFiles",
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$pulumi-nodejs:dynamic:Resource::FrontendBuild.sst.Run"
                    ],
                    "created": "2024-11-09T05:08:49.02317Z",
                    "modified": "2024-11-09T05:08:49.02317Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/cdn.ts#352,5"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN$aws:cloudfront/distribution:Distribution::FrontendCdnDistribution",
                    "custom": true,
                    "id": "E3UGF7LR7TOCYK",
                    "type": "aws:cloudfront/distribution:Distribution",
                    "inputs": {
                        "__defaults": [
                            "httpVersion",
                            "isIpv6Enabled",
                            "priceClass",
                            "retainOnDelete",
                            "staging"
                        ],
                        "aliases": [],
                        "comment": "Frontend site",
                        "customErrorResponses": [
                            {
                                "__defaults": [],
                                "errorCode": 403,
                                "responseCode": 200,
                                "responsePagePath": "/index.html"
                            },
                            {
                                "__defaults": [],
                                "errorCode": 404,
                                "responseCode": 200,
                                "responsePagePath": "/index.html"
                            }
                        ],
                        "defaultCacheBehavior": {
                            "__defaults": [
                                "minTtl"
                            ],
                            "allowedMethods": [
                                "GET",
                                "HEAD",
                                "OPTIONS"
                            ],
                            "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                            "cachedMethods": [
                                "GET",
                                "HEAD"
                            ],
                            "compress": true,
                            "functionAssociations": [
                                {
                                    "__defaults": [],
                                    "eventType": "viewer-request",
                                    "functionArn": "arn:aws:cloudfront::727646493992:function/notes-dev-FrontendFunction"
                                }
                            ],
                            "minTtl": 0,
                            "targetOriginId": "s3",
                            "viewerProtocolPolicy": "redirect-to-https"
                        },
                        "defaultRootObject": "index.html",
                        "enabled": true,
                        "httpVersion": "http2",
                        "isIpv6Enabled": false,
                        "origins": [
                            {
                                "__defaults": [
                                    "connectionAttempts",
                                    "connectionTimeout"
                                ],
                                "connectionAttempts": 3,
                                "connectionTimeout": 10,
                                "domainName": "notes-dev-frontendassets-fxmotokn.s3.us-east-1.amazonaws.com",
                                "originAccessControlId": "E1DCCJY8FODL62",
                                "originId": "s3",
                                "originPath": ""
                            }
                        ],
                        "priceClass": "PriceClass_All",
                        "restrictions": {
                            "__defaults": [],
                            "geoRestriction": {
                                "__defaults": [],
                                "restrictionType": "none"
                            }
                        },
                        "retainOnDelete": false,
                        "staging": false,
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "viewerCertificate": {
                            "__defaults": [
                                "minimumProtocolVersion"
                            ],
                            "cloudfrontDefaultCertificate": true,
                            "minimumProtocolVersion": "TLSv1"
                        },
                        "waitForDeployment": false
                    },
                    "outputs": {
                        "__meta": "{\"schema_version\":\"1\"}",
                        "aliases": null,
                        "arn": "arn:aws:cloudfront::727646493992:distribution/E3UGF7LR7TOCYK",
                        "callerReference": "terraform-20241109050849070800000001",
                        "comment": "Frontend site",
                        "continuousDeploymentPolicyId": "",
                        "customErrorResponses": [
                            {
                                "errorCachingMinTtl": null,
                                "errorCode": 403,
                                "responseCode": 200,
                                "responsePagePath": "/index.html"
                            },
                            {
                                "errorCachingMinTtl": null,
                                "errorCode": 404,
                                "responseCode": 200,
                                "responsePagePath": "/index.html"
                            }
                        ],
                        "defaultCacheBehavior": {
                            "allowedMethods": [
                                "GET",
                                "HEAD",
                                "OPTIONS"
                            ],
                            "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                            "cachedMethods": [
                                "GET",
                                "HEAD"
                            ],
                            "compress": true,
                            "defaultTtl": 0,
                            "fieldLevelEncryptionId": "",
                            "forwardedValues": null,
                            "functionAssociations": [
                                {
                                    "eventType": "viewer-request",
                                    "functionArn": "arn:aws:cloudfront::727646493992:function/notes-dev-FrontendFunction"
                                }
                            ],
                            "lambdaFunctionAssociations": [],
                            "maxTtl": 0,
                            "minTtl": 0,
                            "originRequestPolicyId": "",
                            "realtimeLogConfigArn": "",
                            "responseHeadersPolicyId": "",
                            "smoothStreaming": false,
                            "targetOriginId": "s3",
                            "trustedKeyGroups": [],
                            "trustedSigners": [],
                            "viewerProtocolPolicy": "redirect-to-https"
                        },
                        "defaultRootObject": "index.html",
                        "domainName": "d1ulctjzuluh0n.cloudfront.net",
                        "enabled": true,
                        "etag": "E2W1NNHZSD4D7E",
                        "hostedZoneId": "Z2FDTNDATAQYW2",
                        "httpVersion": "http2",
                        "id": "E3UGF7LR7TOCYK",
                        "inProgressValidationBatches": 0,
                        "isIpv6Enabled": false,
                        "lastModifiedTime": "2024-11-09 05:08:49.246 +0000 UTC",
                        "loggingConfig": null,
                        "orderedCacheBehaviors": [],
                        "originGroups": [],
                        "origins": [
                            {
                                "connectionAttempts": 3,
                                "connectionTimeout": 10,
                                "customHeaders": [],
                                "customOriginConfig": null,
                                "domainName": "notes-dev-frontendassets-fxmotokn.s3.us-east-1.amazonaws.com",
                                "originAccessControlId": "E1DCCJY8FODL62",
                                "originId": "s3",
                                "originPath": "",
                                "originShield": null,
                                "s3OriginConfig": null
                            }
                        ],
                        "priceClass": "PriceClass_All",
                        "restrictions": {
                            "geoRestriction": {
                                "locations": [],
                                "restrictionType": "none"
                            }
                        },
                        "retainOnDelete": false,
                        "staging": false,
                        "status": "InProgress",
                        "tags": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "tagsAll": {
                            "sst:app": "notes",
                            "sst:stage": "dev"
                        },
                        "trustedKeyGroups": [
                            {
                                "enabled": false,
                                "items": []
                            }
                        ],
                        "trustedSigners": [
                            {
                                "enabled": false,
                                "items": []
                            }
                        ],
                        "viewerCertificate": {
                            "acmCertificateArn": "",
                            "cloudfrontDefaultCertificate": true,
                            "iamCertificateId": "",
                            "minimumProtocolVersion": "TLSv1",
                            "sslSupportMethod": ""
                        },
                        "waitForDeployment": false,
                        "webAclId": ""
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN::FrontendCdn",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$aws:cloudfront/function:Function::FrontendFunction",
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket",
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$pulumi-nodejs:dynamic:Resource::FrontendS3AccessControl.sst.aws.OriginAccessControl"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                    "propertyDependencies": {
                        "aliases": [],
                        "comment": [],
                        "customErrorResponses": [],
                        "defaultCacheBehavior": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$aws:cloudfront/function:Function::FrontendFunction"
                        ],
                        "defaultRootObject": [],
                        "enabled": [],
                        "origins": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$pulumi-nodejs:dynamic:Resource::FrontendS3AccessControl.sst.aws.OriginAccessControl",
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::FrontendAssetsBucket"
                        ],
                        "restrictions": [],
                        "viewerCertificate": [],
                        "waitForDeployment": []
                    },
                    "created": "2024-11-09T05:08:50.249252Z",
                    "modified": "2024-11-09T05:08:50.249252Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/cdn.ts#432,14"
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN$pulumi-nodejs:dynamic:Resource::FrontendCdnWaiter.sst.aws.DistributionDeploymentWaiter",
                    "custom": true,
                    "id": "waiter",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.DistributionDeploymentWaiter\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n          this.type = type;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n          return \"Resource.\" + this.type + \".\" + action;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n        return new Promise((resolve, reject) => {\n          const url = new URL(process.env.SST_SERVER + \"/rpc\");\n          const options = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.pathname,\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          const req = http.request(options, (res) => {\n            let data = \"\";\n            res.on(\"data\", (chunk) => {\n              data += chunk;\n            });\n            res.on(\"end\", () => {\n              if (res.statusCode !== 200) {\n                reject(new Error(`Failed to call RPC: ${data}`));\n                return;\n              }\n              try {\n                const json = JSON.parse(data);\n                if (json.error) {\n                  if (json.error.startsWith(\"rpc: can't find\")) {\n                    reject(new MethodNotFoundError(method));\n                    return;\n                  }\n                  reject(new Error(json.error));\n                  return;\n                }\n                resolve(json.result);\n              } catch (error) {\n                reject(new Error(`Failed to parse JSON: ${error.message}`));\n              }\n            });\n          });\n          req.on(\"error\", (error) => {\n            reject(error);\n          });\n          req.setTimeout(0);\n          const body = JSON.stringify({\n            jsonrpc: \"1.0\",\n            method,\n            params: [args]\n          });\n          req.write(body);\n          req.end();\n        });\n      };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n          return call(this.name(\"Create\"), inputs);\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n          return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return;\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n          return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError)\n              return {\n                id\n              };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n          return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return { id, props };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "distributionId": "E3UGF7LR7TOCYK",
                        "etag": "E2W1NNHZSD4D7E",
                        "wait": true
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.DistributionDeploymentWaiter\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n          this.type = type;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n          return \"Resource.\" + this.type + \".\" + action;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n        return new Promise((resolve, reject) => {\n          const url = new URL(process.env.SST_SERVER + \"/rpc\");\n          const options = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.pathname,\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          const req = http.request(options, (res) => {\n            let data = \"\";\n            res.on(\"data\", (chunk) => {\n              data += chunk;\n            });\n            res.on(\"end\", () => {\n              if (res.statusCode !== 200) {\n                reject(new Error(`Failed to call RPC: ${data}`));\n                return;\n              }\n              try {\n                const json = JSON.parse(data);\n                if (json.error) {\n                  if (json.error.startsWith(\"rpc: can't find\")) {\n                    reject(new MethodNotFoundError(method));\n                    return;\n                  }\n                  reject(new Error(json.error));\n                  return;\n                }\n                resolve(json.result);\n              } catch (error) {\n                reject(new Error(`Failed to parse JSON: ${error.message}`));\n              }\n            });\n          });\n          req.on(\"error\", (error) => {\n            reject(error);\n          });\n          req.setTimeout(0);\n          const body = JSON.stringify({\n            jsonrpc: \"1.0\",\n            method,\n            params: [args]\n          });\n          req.write(body);\n          req.end();\n        });\n      };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n          return call(this.name(\"Create\"), inputs);\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n          return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return;\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n          return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError)\n              return {\n                id\n              };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n          return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return { id, props };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "isDone": true
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN::FrontendCdn",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN$aws:cloudfront/distribution:Distribution::FrontendCdnDistribution"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:pulumi-nodejs::default::e4b0a7d6-6fc3-4af8-80ad-4532ca6f6e5a",
                    "propertyDependencies": {
                        "__provider": [],
                        "distributionId": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN$aws:cloudfront/distribution:Distribution::FrontendCdnDistribution"
                        ],
                        "etag": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN$aws:cloudfront/distribution:Distribution::FrontendCdnDistribution"
                        ],
                        "wait": []
                    },
                    "created": "2024-11-09T05:12:47.186481Z",
                    "modified": "2024-11-09T05:12:47.186481Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/providers/distribution-deployment-waiter.ts#20,5",
                    "ignoreChanges": [
                        "*"
                    ]
                },
                {
                    "urn": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN$pulumi-nodejs:dynamic:Resource::FrontendCdnInvalidation.sst.aws.DistributionInvalidation",
                    "custom": true,
                    "id": "invalidation",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.DistributionInvalidation\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n          this.type = type;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n          return \"Resource.\" + this.type + \".\" + action;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n        return new Promise((resolve, reject) => {\n          const url = new URL(process.env.SST_SERVER + \"/rpc\");\n          const options = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.pathname,\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          const req = http.request(options, (res) => {\n            let data = \"\";\n            res.on(\"data\", (chunk) => {\n              data += chunk;\n            });\n            res.on(\"end\", () => {\n              if (res.statusCode !== 200) {\n                reject(new Error(`Failed to call RPC: ${data}`));\n                return;\n              }\n              try {\n                const json = JSON.parse(data);\n                if (json.error) {\n                  if (json.error.startsWith(\"rpc: can't find\")) {\n                    reject(new MethodNotFoundError(method));\n                    return;\n                  }\n                  reject(new Error(json.error));\n                  return;\n                }\n                resolve(json.result);\n              } catch (error) {\n                reject(new Error(`Failed to parse JSON: ${error.message}`));\n              }\n            });\n          });\n          req.on(\"error\", (error) => {\n            reject(error);\n          });\n          req.setTimeout(0);\n          const body = JSON.stringify({\n            jsonrpc: \"1.0\",\n            method,\n            params: [args]\n          });\n          req.write(body);\n          req.end();\n        });\n      };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n          return call(this.name(\"Create\"), inputs);\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n          return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return;\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n          return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError)\n              return {\n                id\n              };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n          return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return { id, props };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "distributionId": "E3UGF7LR7TOCYK",
                        "paths": [
                            "/*"
                        ],
                        "version": "21c0463e3cd7f08790490563a92419ad",
                        "wait": false
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.DistributionInvalidation\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n          this.type = type;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n          return \"Resource.\" + this.type + \".\" + action;\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n        return new Promise((resolve, reject) => {\n          const url = new URL(process.env.SST_SERVER + \"/rpc\");\n          const options = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.pathname,\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          const req = http.request(options, (res) => {\n            let data = \"\";\n            res.on(\"data\", (chunk) => {\n              data += chunk;\n            });\n            res.on(\"end\", () => {\n              if (res.statusCode !== 200) {\n                reject(new Error(`Failed to call RPC: ${data}`));\n                return;\n              }\n              try {\n                const json = JSON.parse(data);\n                if (json.error) {\n                  if (json.error.startsWith(\"rpc: can't find\")) {\n                    reject(new MethodNotFoundError(method));\n                    return;\n                  }\n                  reject(new Error(json.error));\n                  return;\n                }\n                resolve(json.result);\n              } catch (error) {\n                reject(new Error(`Failed to parse JSON: ${error.message}`));\n              }\n            });\n          });\n          req.on(\"error\", (error) => {\n            reject(error);\n          });\n          req.setTimeout(0);\n          const body = JSON.stringify({\n            jsonrpc: \"1.0\",\n            method,\n            params: [args]\n          });\n          req.write(body);\n          req.end();\n        });\n      };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n          return call(this.name(\"Create\"), inputs);\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n          return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return;\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n          return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError)\n              return {\n                id\n              };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n          return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n            if (ex instanceof MethodNotFoundError) return { id, props };\n            throw ex;\n          });\n        };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n"
                    },
                    "parent": "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN::FrontendCdn",
                    "dependencies": [
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN$aws:cloudfront/distribution:Distribution::FrontendCdnDistribution",
                        "urn:pulumi:dev::notes::sst:aws:StaticSite$pulumi-nodejs:dynamic:Resource::FrontendBuild.sst.Run"
                    ],
                    "provider": "urn:pulumi:dev::notes::pulumi:providers:pulumi-nodejs::default::e4b0a7d6-6fc3-4af8-80ad-4532ca6f6e5a",
                    "propertyDependencies": {
                        "__provider": [],
                        "distributionId": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$sst:aws:CDN$aws:cloudfront/distribution:Distribution::FrontendCdnDistribution"
                        ],
                        "paths": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$pulumi-nodejs:dynamic:Resource::FrontendBuild.sst.Run"
                        ],
                        "version": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$pulumi-nodejs:dynamic:Resource::FrontendBuild.sst.Run"
                        ],
                        "wait": [
                            "urn:pulumi:dev::notes::sst:aws:StaticSite$pulumi-nodejs:dynamic:Resource::FrontendBuild.sst.Run"
                        ]
                    },
                    "created": "2024-11-09T05:08:50.595304Z",
                    "modified": "2024-11-09T05:16:58.316812Z",
                    "sourcePosition": "project:///../file:/Users/adam/Documents/GitHub/a16z-hack/.sst/platform/src/components/aws/providers/distribution-invalidation.ts#17,5"
                }
            ],
            "pending_operations": [
                {
                    "resource": {
                        "urn": "urn:pulumi:dev::notes::sst:aws:Dynamo$aws:dynamodb/table:Table::NotesTable",
                        "custom": true,
                        "type": "aws:dynamodb/table:Table",
                        "inputs": {
                            "__defaults": [
                                "tableClass"
                            ],
                            "attributes": [
                                {
                                    "__defaults": [],
                                    "name": "userId",
                                    "type": "S"
                                },
                                {
                                    "__defaults": [],
                                    "name": "noteId",
                                    "type": "S"
                                }
                            ],
                            "billingMode": "PAY_PER_REQUEST",
                            "globalSecondaryIndexes": [],
                            "hashKey": "userId",
                            "localSecondaryIndexes": [],
                            "name": "notes-dev-NotesTable",
                            "pointInTimeRecovery": {
                                "__defaults": [],
                                "enabled": true
                            },
                            "rangeKey": "noteId",
                            "streamEnabled": false,
                            "tableClass": "STANDARD",
                            "tags": {
                                "sst:app": "notes",
                                "sst:stage": "dev"
                            },
                            "tagsAll": {
                                "sst:app": "notes",
                                "sst:stage": "dev"
                            }
                        },
                        "parent": "urn:pulumi:dev::notes::sst:aws:Dynamo::Notes",
                        "provider": "urn:pulumi:dev::notes::pulumi:providers:aws::default_6_58_0::c6a8b897-022d-434a-8503-f32c74d61d71",
                        "propertyDependencies": {
                            "attributes": [],
                            "billingMode": [],
                            "globalSecondaryIndexes": [],
                            "hashKey": [],
                            "localSecondaryIndexes": [],
                            "name": [],
                            "pointInTimeRecovery": [],
                            "rangeKey": [],
                            "streamEnabled": []
                        },
                        "sourcePosition": "project:///platform/node_modules/@pulumi/dynamodb/table.ts#383,9"
                    },
                    "type": "creating"
                }
            ],
            "metadata": {}
        }
    }
}
